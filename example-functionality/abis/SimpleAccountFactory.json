{
  "contractName": "SimpleAccountFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_SimpleAccountAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_simpleAccount",
          "type": "address"
        }
      ],
      "name": "NewSimpleAccount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract SimpleAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "children",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddr",
          "type": "address"
        }
      ],
      "name": "changeBaseAccountAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "entrypoint",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "createAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_SimpleAccountAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_simpleAccount\",\"type\":\"address\"}],\"name\":\"NewSimpleAccount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract SimpleAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"}],\"name\":\"changeBaseAccountAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"children\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"entrypoint\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"NewSimpleAccount(address)\":{\"notice\":\"Event emitted on new proxy creation\"}},\"kind\":\"user\",\"methods\":{\"changeBaseAccountAddress(address)\":{\"notice\":\"change base address*\"},\"createAccount(address,bytes32)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(bytes32)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for SimpleAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Implementation/SimpleAccountFactory.sol\":\"SimpleAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"keccak256\":\"0x888d64d221d52c31d015b76e50ca1af5ef8ff076550810b49cea6b01d8267a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da0f451fe5aefdb95204dbec4a9448a8a2b00a444864bb5dbf7162da842a0f7\",\"dweb:/ipfs/QmYciAwNiJzgGMAqSTUANwMjy5HykNUvmkQ5PQhNTRqrB5\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"project:/contracts/Core/BaseAccount.sol\":{\"keccak256\":\"0xa75eee09b1420aaf7ef550a0c93abd685ec881c338df4c32e7b0f135ec796534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a9f0373f9a45477885ad65fd9663456a609918673848f7316e3497664f02629\",\"dweb:/ipfs/QmWcZ39mVcPp6g2JowRWF13cDUPJqk9CvFpjEXmt6ZSNEA\"]},\"project:/contracts/Implementation/SimpleAccount.sol\":{\"keccak256\":\"0x83acfcafb1e6093043ee38ff1dcfb898128885767375458d1386c64bd9b9d1ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://599422d6d2896c2ee687753fed3407fa109548b8bae739b8f02adaf4cd4d1fdd\",\"dweb:/ipfs/QmTQzKdkBXqoFvPNLjq3SiTTNQrzrrvgzaDk4LpEbbgCC1\"]},\"project:/contracts/Implementation/SimpleAccountFactory.sol\":{\"keccak256\":\"0x227c490267b2c67cc3bbdf02ef26bf92302aa74cbf572363d848b84608118144\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e14a6d084a50a8aaa91503e0e850a19d5010976aa95a75a8fcbb81066a2416c8\",\"dweb:/ipfs/QmP4LCPfVevzCzAqTWy8bkmCP159sHe3bdKRenoLnKPcUA\"]},\"project:/contracts/Interfaces/IAggregator.sol\":{\"keccak256\":\"0x9a62a851850c5ba02ccc58d25bdf80f0e7f39783b72203e051dec15f43d63f4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd60f4decb791a5c1ba06ab8e95c0c41f79c3aa7ab516553b634f948881121e\",\"dweb:/ipfs/QmZBe1M6MZBsj7a9VxGcAyFdnE2cBFxz7QsZ57VabgThqA\"]},\"project:/contracts/Interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x0ab4bdd0b15324f51e12785ceae17b50852550ae75a36be5d9691ed8a0922459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eeb604f3a7b0c1fe8ba2ac27bc3b2b6d4cf6d934e432d8d7190c98de9cac94c\",\"dweb:/ipfs/Qmd8pPDkpyQTSvwpkD6hsNKGB5Ls6jvYd5cYJ3sY1SM7a9\"]},\"project:/contracts/Interfaces/IStakeManager.sol\":{\"keccak256\":\"0x7956fc70ad9af87ca5693028c35bcf28aff878b5fe8e86c8afa4aaa03ab5b05f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd4c1ddccceba2ad1a889956bad31603a824701383a111ad922bda2fefacdf79\",\"dweb:/ipfs/QmegkzUYuyLfhJix74X1xTRG5fUibfFTyjCBzqQn9WnX4W\"]},\"project:/contracts/UserOperation.sol\":{\"keccak256\":\"0xbfc5fdda9ef76cd21cec251dacfa1c454bbbe18b9cb12a3018ceb4e94b415740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34b04318e38b435f757bd567b76056fe375a78b0026f43cf8df3c5d43f6edcf\",\"dweb:/ipfs/QmVREocMq3K1aKEwA9XAV47surTdRAVv6sVWMpxaoRjgSy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161068238038061068283398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610596806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146100f75780638da5cb5b146100ff578063f14ddffc14610110578063f2fde38b1461012357600080fd5b806311464fbe1461008d5780631d81dcff146100bc57806321f8a721146100d15780637002ce42146100e4575b600080fd5b6003546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100cf6100ca366004610502565b610136565b005b6100a06100df36600461051d565b610160565b6100a06100f236600461051d565b610182565b6100cf6101ac565b6000546001600160a01b03166100a0565b6100cf61011e366004610536565b6101c0565b6100cf610131366004610502565b6102bc565b61013e61033a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600154600090819061017b906001600160a01b031684610394565b9392505050565b6002818154811061019257600080fd5b6000918252602090912001546001600160a01b0316905081565b6101b461033a565b6101be60006103f9565b565b6101c861033a565b6001546000906101e1906001600160a01b031683610449565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383811691821790925560405163189acdbd60e31b8152918616600483015291925063c4d66de890602401600060405180830381600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b50506040516001600160a01b03841692507f6ce2d4d884d1145aa4e5f0833c2d8f4e2524019eb0908bb9d39472a9ddc25b139150600090a2505050565b6102c461033a565b6001600160a01b03811661032e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610337816103f9565b50565b6000546001600160a01b031633146101be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610325565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101206000905b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166103f35760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610325565b80356001600160a01b03811681146104fd57600080fd5b919050565b60006020828403121561051457600080fd5b6103f0826104e6565b60006020828403121561052f57600080fd5b5035919050565b6000806040838503121561054957600080fd5b610552836104e6565b94602093909301359350505056fea26469706673582212206ea542a0d35985a0a3de5427a93ecb3bf19ed4020d6841503b4fa78ef2bd172a64736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063715018a61161005b578063715018a6146100f75780638da5cb5b146100ff578063f14ddffc14610110578063f2fde38b1461012357600080fd5b806311464fbe1461008d5780631d81dcff146100bc57806321f8a721146100d15780637002ce42146100e4575b600080fd5b6003546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100cf6100ca366004610502565b610136565b005b6100a06100df36600461051d565b610160565b6100a06100f236600461051d565b610182565b6100cf6101ac565b6000546001600160a01b03166100a0565b6100cf61011e366004610536565b6101c0565b6100cf610131366004610502565b6102bc565b61013e61033a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600154600090819061017b906001600160a01b031684610394565b9392505050565b6002818154811061019257600080fd5b6000918252602090912001546001600160a01b0316905081565b6101b461033a565b6101be60006103f9565b565b6101c861033a565b6001546000906101e1906001600160a01b031683610449565b600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0383811691821790925560405163189acdbd60e31b8152918616600483015291925063c4d66de890602401600060405180830381600087803b15801561026b57600080fd5b505af115801561027f573d6000803e3d6000fd5b50506040516001600160a01b03841692507f6ce2d4d884d1145aa4e5f0833c2d8f4e2524019eb0908bb9d39472a9ddc25b139150600090a2505050565b6102c461033a565b6001600160a01b03811661032e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b610337816103f9565b50565b6000546001600160a01b031633146101be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610325565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101206000905b90505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b0381166103f35760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c65640000000000000000006044820152606401610325565b80356001600160a01b03811681146104fd57600080fd5b919050565b60006020828403121561051457600080fd5b6103f0826104e6565b60006020828403121561052f57600080fd5b5035919050565b6000806040838503121561054957600080fd5b610552836104e6565b94602093909301359350505056fea26469706673582212206ea542a0d35985a0a3de5427a93ecb3bf19ed4020d6841503b4fa78ef2bd172a64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:21"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:21"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:21",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:21",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:21",
                "type": ""
              }
            ],
            "src": "14:290:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2575:21",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:21",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "145:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "155:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "178:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "163:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "163:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "155:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "197:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "212:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "228:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "233:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "224:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "224:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "237:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "208:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "208:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "190:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "190:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "190:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SimpleAccount_$3166__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "114:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "125:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "136:4:21",
                "type": ""
              }
            ],
            "src": "14:233:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "301:124:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "311:29:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "333:6:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "320:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "320:20:21"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "311:5:21"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "403:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "412:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "415:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "405:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "405:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "405:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "362:5:21"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "373:5:21"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "388:3:21",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "393:1:21",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:3:21"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "384:11:21"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "397:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "380:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "380:19:21"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "369:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "369:31:21"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "359:2:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "359:42:21"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "352:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:50:21"
                  },
                  "nodeType": "YulIf",
                  "src": "349:70:21"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "280:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "291:5:21",
                "type": ""
              }
            ],
            "src": "252:173:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "500:116:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "546:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "555:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "558:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "548:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "548:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "548:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "521:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "530:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "517:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "517:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "542:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "513:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "513:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "510:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "571:39:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "600:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "581:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:29:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "571:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "466:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "477:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "489:6:21",
                "type": ""
              }
            ],
            "src": "430:186:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "691:110:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "737:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "746:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "749:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "739:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "739:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "739:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "712:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "721:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "708:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "708:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "733:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "704:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "701:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "762:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "785:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "772:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "772:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "762:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "657:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "668:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "680:6:21",
                "type": ""
              }
            ],
            "src": "621:180:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:102:21",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "917:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "929:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "940:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "925:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "917:4:21"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "959:9:21"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "974:6:21"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "990:3:21",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "995:1:21",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "986:3:21"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "986:11:21"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "999:1:21",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "982:3:21"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "982:19:21"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "970:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "970:32:21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "952:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "952:51:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "952:51:21"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "876:9:21",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "887:6:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "898:4:21",
                "type": ""
              }
            ],
            "src": "806:203:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1084:110:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1130:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1139:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1142:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1132:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1132:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1132:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1105:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1114:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1101:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1101:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1126:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1097:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1097:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1094:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1155:33:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1178:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1165:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1165:23:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1155:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1050:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1061:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1073:6:21",
                "type": ""
              }
            ],
            "src": "1014:180:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:167:21",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1332:16:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1341:1:21",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1344:1:21",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1334:6:21"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1334:12:21"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1334:12:21"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1307:7:21"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1316:9:21"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1303:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1303:23:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1328:2:21",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1299:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1299:32:21"
                  },
                  "nodeType": "YulIf",
                  "src": "1296:52:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1357:39:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1386:9:21"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1367:18:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:29:21"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1357:6:21"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1405:42:21",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1432:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1443:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1428:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1428:18:21"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1415:12:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1415:32:21"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1405:6:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1244:9:21",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1255:7:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1267:6:21",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1275:6:21",
                "type": ""
              }
            ],
            "src": "1199:254:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1632:228:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1649:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1660:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1642:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1642:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1642:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1683:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1694:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1679:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1679:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1699:2:21",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1672:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1672:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1672:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1722:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1733:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1718:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:18:21"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1738:34:21",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1711:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1793:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1804:2:21",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1789:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1789:18:21"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1809:8:21",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1782:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:36:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1782:36:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1827:27:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1839:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1850:3:21",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1835:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1835:19:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1827:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1609:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1623:4:21",
                "type": ""
              }
            ],
            "src": "1458:402:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2039:182:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2056:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2067:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2049:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2049:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2090:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2101:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2086:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2086:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2106:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2079:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2079:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2079:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2129:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2140:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2125:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2125:18:21"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2145:34:21",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2118:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2118:62:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2118:62:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2189:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2201:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2212:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2197:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2197:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2189:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2016:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2030:4:21",
                "type": ""
              }
            ],
            "src": "1865:356:21"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2400:173:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2417:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2428:2:21",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2410:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2410:21:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2410:21:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2451:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2462:2:21",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2447:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2447:18:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2467:2:21",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2440:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2440:30:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2440:30:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2490:9:21"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2501:2:21",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2486:3:21"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2486:18:21"
                      },
                      {
                        "hexValue": "455243313136373a2063726561746532206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2506:25:21",
                        "type": "",
                        "value": "ERC1167: create2 failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2479:6:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2479:53:21"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2479:53:21"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2541:26:21",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2553:9:21"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2564:2:21",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2549:3:21"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2549:18:21"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2541:4:21"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2377:9:21",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2391:4:21",
                "type": ""
              }
            ],
            "src": "2226:347:21"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_SimpleAccount_$3166__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"ERC1167: create2 failed\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 21,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "684:1809:15:-:0;;;1085:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;719:10:8;936:18:0;:32::i;:::-;1139:20:15;:44;;-1:-1:-1;;;;;;1139:44:15;-1:-1:-1;;;;;1139:44:15;;;;;;;;;;684:1809;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:21:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:21;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:21:o;:::-;684:1809:15;;;;;;",
  "deployedSourceMap": "684:1809:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;918:42;;;;;-1:-1:-1;;;;;918:42:15;;;;;;-1:-1:-1;;;;;208:32:21;;;190:51;;178:2;163:18;918:42:15;;;;;;;1254:119;;;;;;:::i;:::-;;:::i;:::-;;2237:253;;;;;;:::i;:::-;;:::i;884:25::-;;;;;;:::i;:::-;;:::i;1831:101:0:-;;;:::i;1201:85::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1761:346:15;;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;:::i;:::-;;:::i;1254:119:15:-;1094:13:0;:11;:13::i;:::-;1335:20:15::1;:30:::0;;-1:-1:-1;;;;;;1335:30:15::1;-1:-1:-1::0;;;;;1335:30:15;;;::::1;::::0;;;::::1;::::0;;1254:119::o;2237:253::-;2394:20;;2294:7;;;;2345:99;;-1:-1:-1;;;;;2394:20:15;2429:4;2345:34;:99::i;:::-;2314:130;2237:253;-1:-1:-1;;;2237:253:15:o;884:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;884:25:15;;-1:-1:-1;884:25:15;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1761:346:15:-;1094:13:0;:11;:13::i;:::-;1896:20:15::1;::::0;1871:22:::1;::::0;1896:45:::1;::::0;-1:-1:-1;;;;;1896:20:15::1;1936:4:::0;1896:39:::1;:45::i;:::-;1954:8;:29:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1954:29:15;;;;;::::1;::::0;;-1:-1:-1;;;;;;1954:29:15::1;-1:-1:-1::0;;;;;1954:29:15;;::::1;::::0;;::::1;::::0;;;1996:53:::1;::::0;-1:-1:-1;;;1996:53:15;;208:32:21;;;1996:53:15::1;::::0;::::1;190:51:21::0;1954:29:15;;-1:-1:-1;1996:41:15::1;::::0;163:18:21;;1996:53:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2067:32:15::1;::::0;-1:-1:-1;;;;;2067:32:15;::::1;::::0;-1:-1:-1;2067:32:15::1;::::0;-1:-1:-1;2067:32:15;;::::1;1860:247;1761:346:::0;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;1660:2:21;2161:73:0::1;::::0;::::1;1642:21:21::0;1699:2;1679:18;;;1672:30;1738:34;1718:18;;;1711:62;-1:-1:-1;;;1789:18:21;;;1782:36;1835:19;;2161:73:0::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:8;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2067:2:21;1414:68:0;;;2049:21:21;;;2086:18;;;2079:30;2145:34;2125:18;;;2118:62;2197:18;;1414:68:0;1865:356:21;3801:233:2;3269:4;3263:11;4021:4;3303;3294:14;;3287:32;3355:34;3348:4;3339:14;;3332:58;-1:-1:-1;3410:14:2;;3403:38;;;3466:42;3454:55;;3538:4;3529:14;;3522:28;;;3612:4;3605;3596:14;;3586:31;3579:4;3570:14;;3563:55;3670:4;3663;3654:14;;;3644:31;3923:17;;3963:64;3956:71;;3801:233;;;;;:::o;2433:187:0:-;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2107:794:2:-;2191:16;2523:48;2505:14;2499:4;2495:25;2489:4;2485:36;2482:90;2476:4;2469:104;2730:32;2713:14;2707:4;2703:25;2700:63;2694:4;2687:77;2812:4;2806;2800;2797:1;2789:28;2777:40;-1:-1:-1;;;;;;2844:22:2;;2836:58;;;;-1:-1:-1;;;2836:58:2;;2428:2:21;2836:58:2;;;2410:21:21;2467:2;2447:18;;;2440:30;2506:25;2486:18;;;2479:53;2549:18;;2836:58:2;2226:347:21;252:173;320:20;;-1:-1:-1;;;;;369:31:21;;359:42;;349:70;;415:1;412;405:12;349:70;252:173;;;:::o;430:186::-;489:6;542:2;530:9;521:7;517:23;513:32;510:52;;;558:1;555;548:12;510:52;581:29;600:9;581:29;:::i;621:180::-;680:6;733:2;721:9;712:7;708:23;704:32;701:52;;;749:1;746;739:12;701:52;-1:-1:-1;772:23:21;;621:180;-1:-1:-1;621:180:21:o;1199:254::-;1267:6;1275;1328:2;1316:9;1307:7;1303:23;1299:32;1296:52;;;1344:1;1341;1334:12;1296:52;1367:29;1386:9;1367:29;:::i;:::-;1357:39;1443:2;1428:18;;;;1415:32;;-1:-1:-1;;;1199:254:21:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"./SimpleAccount.sol\";\r\n\r\ninterface ISimpleAccount {\r\n    function initialize(address entrypoint) external;\r\n}\r\n\r\n/**\r\n * A sample factory contract for SimpleAccount\r\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\r\n * The factory's createAccount returns the target account address even if it is already installed.\r\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\r\n */\r\ncontract SimpleAccountFactory is Ownable {\r\n    /// @notice cheaply clone contract functionality in an immutable way\r\n    using Clones for address;\r\n\r\n    address private SimpleAccountAddress;\r\n\r\n    address[] public children;\r\n\r\n    SimpleAccount public accountImplementation;\r\n\r\n    /// @notice Event emitted on new proxy creation\r\n    event NewSimpleAccount(address indexed _simpleAccount);\r\n\r\n    constructor(address _SimpleAccountAddress) {\r\n        SimpleAccountAddress = _SimpleAccountAddress;\r\n    }\r\n\r\n    /**\r\n     * @notice change base address\r\n     **/\r\n    function changeBaseAccountAddress(address newAddr) external onlyOwner {\r\n        SimpleAccountAddress = newAddr;\r\n    }\r\n\r\n    /**\r\n     * create an account, and return its address.\r\n     * returns the address even if the account is already deployed.\r\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\r\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\r\n     */\r\n    function createAccount(address entrypoint, bytes32 salt)\r\n        external\r\n        onlyOwner\r\n    {\r\n        address identicalChild = SimpleAccountAddress.cloneDeterministic(salt);\r\n\r\n        children.push(identicalChild);\r\n\r\n        ISimpleAccount(identicalChild).initialize(entrypoint);\r\n\r\n        emit NewSimpleAccount(identicalChild);\r\n    }\r\n\r\n    /**\r\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\r\n     */\r\n    function getAddress(bytes32 salt) external view returns (address) {\r\n        address simpleAccountAddress = Clones.predictDeterministicAddress(\r\n            SimpleAccountAddress,\r\n            salt\r\n        );\r\n        return simpleAccountAddress;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Ghadi\\Desktop\\Portfolio\\Smart-Contract-Wallet\\account-abstraction-contracts\\contracts\\Implementation\\SimpleAccountFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Implementation/SimpleAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        1145
      ],
      "BaseAccount": [
        2803
      ],
      "Clones": [
        202
      ],
      "Context": [
        1167
      ],
      "ECDSA": [
        1763
      ],
      "ERC1967Upgrade": [
        520
      ],
      "IAggregator": [
        3308
      ],
      "IBeacon": [
        530
      ],
      "IERC1822Proxiable": [
        122
      ],
      "IEntryPoint": [
        3499
      ],
      "ISimpleAccount": [
        3177
      ],
      "IStakeManager": [
        3603
      ],
      "Initializable": [
        699
      ],
      "Math": [
        2628
      ],
      "Ownable": [
        112
      ],
      "SimpleAccount": [
        3166
      ],
      "SimpleAccountFactory": [
        3274
      ],
      "StorageSlot": [
        1227
      ],
      "Strings": [
        1402
      ],
      "UUPSUpgradeable": [
        815
      ],
      "UserOperation": [
        3661
      ],
      "UserOperationLib": [
        3765
      ]
    },
    "id": 3275,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3168,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 3169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3275,
        "sourceUnit": 203,
        "src": "60:50:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3275,
        "sourceUnit": 113,
        "src": "112:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Implementation/SimpleAccount.sol",
        "file": "./SimpleAccount.sol",
        "id": 3171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3275,
        "sourceUnit": 3167,
        "src": "168:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISimpleAccount",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3177,
        "linearizedBaseContracts": [
          3177
        ],
        "name": "ISimpleAccount",
        "nameLocation": "211:14:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "c4d66de8",
            "id": 3176,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "242:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3173,
                  "mutability": "mutable",
                  "name": "entrypoint",
                  "nameLocation": "261:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "253:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "252:20:15"
            },
            "returnParameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "281:0:15"
            },
            "scope": 3177,
            "src": "233:49:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3275,
        "src": "201:84:15",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3179,
              "name": "Ownable",
              "nameLocations": [
                "717:7:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "717:7:15"
            },
            "id": 3180,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:15"
          }
        ],
        "canonicalName": "SimpleAccountFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3178,
          "nodeType": "StructuredDocumentation",
          "src": "289:393:15",
          "text": " A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 3274,
        "linearizedBaseContracts": [
          3274,
          112,
          1167
        ],
        "name": "SimpleAccountFactory",
        "nameLocation": "693:20:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3183,
            "libraryName": {
              "id": 3181,
              "name": "Clones",
              "nameLocations": [
                "812:6:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 202,
              "src": "812:6:15"
            },
            "nodeType": "UsingForDirective",
            "src": "806:25:15",
            "typeName": {
              "id": 3182,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "823:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 3185,
            "mutability": "mutable",
            "name": "SimpleAccountAddress",
            "nameLocation": "855:20:15",
            "nodeType": "VariableDeclaration",
            "scope": 3274,
            "src": "839:36:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3184,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "839:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7002ce42",
            "id": 3188,
            "mutability": "mutable",
            "name": "children",
            "nameLocation": "901:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 3274,
            "src": "884:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3186,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "884:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3187,
              "nodeType": "ArrayTypeName",
              "src": "884:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 3191,
            "mutability": "mutable",
            "name": "accountImplementation",
            "nameLocation": "939:21:15",
            "nodeType": "VariableDeclaration",
            "scope": 3274,
            "src": "918:42:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleAccount_$3166",
              "typeString": "contract SimpleAccount"
            },
            "typeName": {
              "id": 3190,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3189,
                "name": "SimpleAccount",
                "nameLocations": [
                  "918:13:15"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3166,
                "src": "918:13:15"
              },
              "referencedDeclaration": 3166,
              "src": "918:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleAccount_$3166",
                "typeString": "contract SimpleAccount"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3192,
              "nodeType": "StructuredDocumentation",
              "src": "969:47:15",
              "text": "@notice Event emitted on new proxy creation"
            },
            "eventSelector": "6ce2d4d884d1145aa4e5f0833c2d8f4e2524019eb0908bb9d39472a9ddc25b13",
            "id": 3196,
            "name": "NewSimpleAccount",
            "nameLocation": "1028:16:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3194,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_simpleAccount",
                  "nameLocation": "1061:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3196,
                  "src": "1045:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:32:15"
            },
            "src": "1022:55:15"
          },
          {
            "body": {
              "id": 3205,
              "nodeType": "Block",
              "src": "1128:63:15",
              "statements": [
                {
                  "expression": {
                    "id": 3203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3201,
                      "name": "SimpleAccountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3185,
                      "src": "1139:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3202,
                      "name": "_SimpleAccountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3198,
                      "src": "1162:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1139:44:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3204,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:44:15"
                }
              ]
            },
            "id": 3206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3198,
                  "mutability": "mutable",
                  "name": "_SimpleAccountAddress",
                  "nameLocation": "1105:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3206,
                  "src": "1097:29:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:31:15"
            },
            "returnParameters": {
              "id": 3200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:0:15"
            },
            "scope": 3274,
            "src": "1085:106:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3218,
              "nodeType": "Block",
              "src": "1324:49:15",
              "statements": [
                {
                  "expression": {
                    "id": 3216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3214,
                      "name": "SimpleAccountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3185,
                      "src": "1335:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3215,
                      "name": "newAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3209,
                      "src": "1358:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1335:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3217,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:30:15"
                }
              ]
            },
            "documentation": {
              "id": 3207,
              "nodeType": "StructuredDocumentation",
              "src": "1199:49:15",
              "text": " @notice change base address*"
            },
            "functionSelector": "1d81dcff",
            "id": 3219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3211,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1314:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1314:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1314:9:15"
              }
            ],
            "name": "changeBaseAccountAddress",
            "nameLocation": "1263:24:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3209,
                  "mutability": "mutable",
                  "name": "newAddr",
                  "nameLocation": "1296:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3219,
                  "src": "1288:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:17:15"
            },
            "returnParameters": {
              "id": 3213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1324:0:15"
            },
            "scope": 3274,
            "src": "1254:119:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3253,
              "nodeType": "Block",
              "src": "1860:247:15",
              "statements": [
                {
                  "assignments": [
                    3230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3230,
                      "mutability": "mutable",
                      "name": "identicalChild",
                      "nameLocation": "1879:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3253,
                      "src": "1871:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3229,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1871:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3233,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3224,
                        "src": "1936:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3231,
                        "name": "SimpleAccountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3185,
                        "src": "1896:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1917:18:15",
                      "memberName": "cloneDeterministic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 167,
                      "src": "1896:39:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes32) returns (address)"
                      }
                    },
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1871:70:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3239,
                        "name": "identicalChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "1968:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3236,
                        "name": "children",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3188,
                        "src": "1954:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1963:4:15",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1954:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:29:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3241,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:29:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3246,
                        "name": "entrypoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3222,
                        "src": "2038:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3243,
                            "name": "identicalChild",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3230,
                            "src": "2011:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3242,
                          "name": "ISimpleAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3177,
                          "src": "1996:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISimpleAccount_$3177_$",
                            "typeString": "type(contract ISimpleAccount)"
                          }
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1996:30:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISimpleAccount_$3177",
                          "typeString": "contract ISimpleAccount"
                        }
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2027:10:15",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3176,
                      "src": "1996:41:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3248,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:53:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3250,
                        "name": "identicalChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "2084:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3249,
                      "name": "NewSimpleAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3196,
                      "src": "2067:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2067:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3252,
                  "nodeType": "EmitStatement",
                  "src": "2062:37:15"
                }
              ]
            },
            "documentation": {
              "id": 3220,
              "nodeType": "StructuredDocumentation",
              "src": "1381:374:15",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "f14ddffc",
            "id": 3254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3226,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1845:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1845:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1845:9:15"
              }
            ],
            "name": "createAccount",
            "nameLocation": "1770:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3222,
                  "mutability": "mutable",
                  "name": "entrypoint",
                  "nameLocation": "1792:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3254,
                  "src": "1784:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1784:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3224,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1812:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3254,
                  "src": "1804:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3223,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1783:34:15"
            },
            "returnParameters": {
              "id": 3228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:15"
            },
            "scope": 3274,
            "src": "1761:346:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3272,
              "nodeType": "Block",
              "src": "2303:187:15",
              "statements": [
                {
                  "assignments": [
                    3263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3263,
                      "mutability": "mutable",
                      "name": "simpleAccountAddress",
                      "nameLocation": "2322:20:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "2314:28:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2314:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3266,
                        "name": "SimpleAccountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3185,
                        "src": "2394:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3267,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3257,
                        "src": "2429:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3264,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2345:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$202_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 3265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2352:27:15",
                      "memberName": "predictDeterministicAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 201,
                      "src": "2345:34:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view returns (address)"
                      }
                    },
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:99:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2314:130:15"
                },
                {
                  "expression": {
                    "id": 3270,
                    "name": "simpleAccountAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3263,
                    "src": "2462:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3261,
                  "id": 3271,
                  "nodeType": "Return",
                  "src": "2455:27:15"
                }
              ]
            },
            "documentation": {
              "id": 3255,
              "nodeType": "StructuredDocumentation",
              "src": "2115:116:15",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "21f8a721",
            "id": 3273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "2246:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3257,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2265:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "2257:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2256:14:15"
            },
            "returnParameters": {
              "id": 3261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "2294:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2293:9:15"
            },
            "scope": 3274,
            "src": "2237:253:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3275,
        "src": "684:1809:15",
        "usedErrors": []
      }
    ],
    "src": "33:2462:15"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Implementation/SimpleAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        1145
      ],
      "BaseAccount": [
        2803
      ],
      "Clones": [
        202
      ],
      "Context": [
        1167
      ],
      "ECDSA": [
        1763
      ],
      "ERC1967Upgrade": [
        520
      ],
      "IAggregator": [
        3308
      ],
      "IBeacon": [
        530
      ],
      "IERC1822Proxiable": [
        122
      ],
      "IEntryPoint": [
        3499
      ],
      "ISimpleAccount": [
        3177
      ],
      "IStakeManager": [
        3603
      ],
      "Initializable": [
        699
      ],
      "Math": [
        2628
      ],
      "Ownable": [
        112
      ],
      "SimpleAccount": [
        3166
      ],
      "SimpleAccountFactory": [
        3274
      ],
      "StorageSlot": [
        1227
      ],
      "Strings": [
        1402
      ],
      "UUPSUpgradeable": [
        815
      ],
      "UserOperation": [
        3661
      ],
      "UserOperationLib": [
        3765
      ]
    },
    "id": 3275,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3168,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/Clones.sol",
        "file": "@openzeppelin/contracts/proxy/Clones.sol",
        "id": 3169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3275,
        "sourceUnit": 203,
        "src": "60:50:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3275,
        "sourceUnit": 113,
        "src": "112:52:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Implementation/SimpleAccount.sol",
        "file": "./SimpleAccount.sol",
        "id": 3171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3275,
        "sourceUnit": 3167,
        "src": "168:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISimpleAccount",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3177,
        "linearizedBaseContracts": [
          3177
        ],
        "name": "ISimpleAccount",
        "nameLocation": "211:14:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "c4d66de8",
            "id": 3176,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "242:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3173,
                  "mutability": "mutable",
                  "name": "entrypoint",
                  "nameLocation": "261:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3176,
                  "src": "253:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "252:20:15"
            },
            "returnParameters": {
              "id": 3175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "281:0:15"
            },
            "scope": 3177,
            "src": "233:49:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3275,
        "src": "201:84:15",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3179,
              "name": "Ownable",
              "nameLocations": [
                "717:7:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "717:7:15"
            },
            "id": 3180,
            "nodeType": "InheritanceSpecifier",
            "src": "717:7:15"
          }
        ],
        "canonicalName": "SimpleAccountFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3178,
          "nodeType": "StructuredDocumentation",
          "src": "289:393:15",
          "text": " A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 3274,
        "linearizedBaseContracts": [
          3274,
          112,
          1167
        ],
        "name": "SimpleAccountFactory",
        "nameLocation": "693:20:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3183,
            "libraryName": {
              "id": 3181,
              "name": "Clones",
              "nameLocations": [
                "812:6:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 202,
              "src": "812:6:15"
            },
            "nodeType": "UsingForDirective",
            "src": "806:25:15",
            "typeName": {
              "id": 3182,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "823:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 3185,
            "mutability": "mutable",
            "name": "SimpleAccountAddress",
            "nameLocation": "855:20:15",
            "nodeType": "VariableDeclaration",
            "scope": 3274,
            "src": "839:36:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3184,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "839:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "7002ce42",
            "id": 3188,
            "mutability": "mutable",
            "name": "children",
            "nameLocation": "901:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 3274,
            "src": "884:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 3186,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "884:7:15",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 3187,
              "nodeType": "ArrayTypeName",
              "src": "884:9:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 3191,
            "mutability": "mutable",
            "name": "accountImplementation",
            "nameLocation": "939:21:15",
            "nodeType": "VariableDeclaration",
            "scope": 3274,
            "src": "918:42:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleAccount_$3166",
              "typeString": "contract SimpleAccount"
            },
            "typeName": {
              "id": 3190,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3189,
                "name": "SimpleAccount",
                "nameLocations": [
                  "918:13:15"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3166,
                "src": "918:13:15"
              },
              "referencedDeclaration": 3166,
              "src": "918:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleAccount_$3166",
                "typeString": "contract SimpleAccount"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3192,
              "nodeType": "StructuredDocumentation",
              "src": "969:47:15",
              "text": "@notice Event emitted on new proxy creation"
            },
            "eventSelector": "6ce2d4d884d1145aa4e5f0833c2d8f4e2524019eb0908bb9d39472a9ddc25b13",
            "id": 3196,
            "name": "NewSimpleAccount",
            "nameLocation": "1028:16:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3194,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_simpleAccount",
                  "nameLocation": "1061:14:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3196,
                  "src": "1045:30:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1044:32:15"
            },
            "src": "1022:55:15"
          },
          {
            "body": {
              "id": 3205,
              "nodeType": "Block",
              "src": "1128:63:15",
              "statements": [
                {
                  "expression": {
                    "id": 3203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3201,
                      "name": "SimpleAccountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3185,
                      "src": "1139:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3202,
                      "name": "_SimpleAccountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3198,
                      "src": "1162:21:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1139:44:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3204,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:44:15"
                }
              ]
            },
            "id": 3206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3198,
                  "mutability": "mutable",
                  "name": "_SimpleAccountAddress",
                  "nameLocation": "1105:21:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3206,
                  "src": "1097:29:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:31:15"
            },
            "returnParameters": {
              "id": 3200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:0:15"
            },
            "scope": 3274,
            "src": "1085:106:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3218,
              "nodeType": "Block",
              "src": "1324:49:15",
              "statements": [
                {
                  "expression": {
                    "id": 3216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3214,
                      "name": "SimpleAccountAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3185,
                      "src": "1335:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3215,
                      "name": "newAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3209,
                      "src": "1358:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1335:30:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3217,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:30:15"
                }
              ]
            },
            "documentation": {
              "id": 3207,
              "nodeType": "StructuredDocumentation",
              "src": "1199:49:15",
              "text": " @notice change base address*"
            },
            "functionSelector": "1d81dcff",
            "id": 3219,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3212,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3211,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1314:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1314:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1314:9:15"
              }
            ],
            "name": "changeBaseAccountAddress",
            "nameLocation": "1263:24:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3209,
                  "mutability": "mutable",
                  "name": "newAddr",
                  "nameLocation": "1296:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3219,
                  "src": "1288:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1288:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1287:17:15"
            },
            "returnParameters": {
              "id": 3213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1324:0:15"
            },
            "scope": 3274,
            "src": "1254:119:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3253,
              "nodeType": "Block",
              "src": "1860:247:15",
              "statements": [
                {
                  "assignments": [
                    3230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3230,
                      "mutability": "mutable",
                      "name": "identicalChild",
                      "nameLocation": "1879:14:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3253,
                      "src": "1871:22:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3229,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1871:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3235,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3233,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3224,
                        "src": "1936:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3231,
                        "name": "SimpleAccountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3185,
                        "src": "1896:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1917:18:15",
                      "memberName": "cloneDeterministic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 167,
                      "src": "1896:39:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes32_$returns$_t_address_$attached_to$_t_address_$",
                        "typeString": "function (address,bytes32) returns (address)"
                      }
                    },
                    "id": 3234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1871:70:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3239,
                        "name": "identicalChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "1968:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 3236,
                        "name": "children",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3188,
                        "src": "1954:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 3238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1963:4:15",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1954:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 3240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:29:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3241,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:29:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3246,
                        "name": "entrypoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3222,
                        "src": "2038:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3243,
                            "name": "identicalChild",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3230,
                            "src": "2011:14:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3242,
                          "name": "ISimpleAccount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3177,
                          "src": "1996:14:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISimpleAccount_$3177_$",
                            "typeString": "type(contract ISimpleAccount)"
                          }
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1996:30:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISimpleAccount_$3177",
                          "typeString": "contract ISimpleAccount"
                        }
                      },
                      "id": 3245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2027:10:15",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3176,
                      "src": "1996:41:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 3247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1996:53:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3248,
                  "nodeType": "ExpressionStatement",
                  "src": "1996:53:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3250,
                        "name": "identicalChild",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3230,
                        "src": "2084:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3249,
                      "name": "NewSimpleAccount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3196,
                      "src": "2067:16:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 3251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2067:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3252,
                  "nodeType": "EmitStatement",
                  "src": "2062:37:15"
                }
              ]
            },
            "documentation": {
              "id": 3220,
              "nodeType": "StructuredDocumentation",
              "src": "1381:374:15",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "f14ddffc",
            "id": 3254,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3227,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3226,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1845:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1845:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1845:9:15"
              }
            ],
            "name": "createAccount",
            "nameLocation": "1770:13:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3222,
                  "mutability": "mutable",
                  "name": "entrypoint",
                  "nameLocation": "1792:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3254,
                  "src": "1784:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1784:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3224,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1812:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3254,
                  "src": "1804:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3223,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1804:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1783:34:15"
            },
            "returnParameters": {
              "id": 3228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1860:0:15"
            },
            "scope": 3274,
            "src": "1761:346:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3272,
              "nodeType": "Block",
              "src": "2303:187:15",
              "statements": [
                {
                  "assignments": [
                    3263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3263,
                      "mutability": "mutable",
                      "name": "simpleAccountAddress",
                      "nameLocation": "2322:20:15",
                      "nodeType": "VariableDeclaration",
                      "scope": 3272,
                      "src": "2314:28:15",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2314:7:15",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3269,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3266,
                        "name": "SimpleAccountAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3185,
                        "src": "2394:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3267,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3257,
                        "src": "2429:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3264,
                        "name": "Clones",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 202,
                        "src": "2345:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Clones_$202_$",
                          "typeString": "type(library Clones)"
                        }
                      },
                      "id": 3265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2352:27:15",
                      "memberName": "predictDeterministicAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 201,
                      "src": "2345:34:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view returns (address)"
                      }
                    },
                    "id": 3268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:99:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2314:130:15"
                },
                {
                  "expression": {
                    "id": 3270,
                    "name": "simpleAccountAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3263,
                    "src": "2462:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3261,
                  "id": 3271,
                  "nodeType": "Return",
                  "src": "2455:27:15"
                }
              ]
            },
            "documentation": {
              "id": 3255,
              "nodeType": "StructuredDocumentation",
              "src": "2115:116:15",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "21f8a721",
            "id": 3273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "2246:10:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3257,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2265:4:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "2257:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3256,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2257:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2256:14:15"
            },
            "returnParameters": {
              "id": 3261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3273,
                  "src": "2294:7:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2294:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2293:9:15"
            },
            "scope": 3274,
            "src": "2237:253:15",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3275,
        "src": "684:1809:15",
        "usedErrors": []
      }
    ],
    "src": "33:2462:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {},
      "links": {},
      "address": "0xACD8f27EAF5B160d460b60E4f45F9FFafb70516a",
      "transactionHash": "0xa1d8229218936c1935be7aa402b4be51e50757f86584ab200d2f31ebbd56de14"
    },
    "1676729777118": {
      "events": {},
      "links": {},
      "address": "0x841EC204fa49723F0108f6DFb44D3c09c671d3a9",
      "transactionHash": "0x305ae253cf127c5c52e0bcc9c26dba1ca15855be4c707d3f6498a49aa5dfeffb"
    }
  },
  "schemaVersion": "3.4.4",
  "updatedAt": "2023-02-18T14:19:30.432Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "NewSimpleAccount(address)": {
        "notice": "Event emitted on new proxy creation"
      }
    },
    "kind": "user",
    "methods": {
      "changeBaseAccountAddress(address)": {
        "notice": "change base address*"
      },
      "createAccount(address,bytes32)": {
        "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
      },
      "getAddress(bytes32)": {
        "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
      }
    },
    "notice": "A sample factory contract for SimpleAccount A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.",
    "version": 1
  }
}