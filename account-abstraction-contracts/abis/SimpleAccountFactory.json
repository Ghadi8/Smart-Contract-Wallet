{
  "contractName": "SimpleAccountFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract SimpleAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract SimpleAccount",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract SimpleAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract SimpleAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,uint256)\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256)\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for SimpleAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Implementation/SimpleAccountFactory.sol\":\"SimpleAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89c2a0f70157c13845be5cb49b078a6374fee3a78fa950052a3af26190255da8\",\"dweb:/ipfs/QmUcvMEQH1oMM2pUyMuDiBUKdvvnTz1NRB8bmPHrVq8725\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3798da9e212cd00a7cda94ddb5a9721171a718e89c500d8901f810e0e37fa74e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93f9c584e4b29dce1c7520b63d19f34c684f5ea972b5d04323a132059851004\",\"dweb:/ipfs/QmajmiA7BsarS63FMoP5PcBS4mqVGoiJ7xZ3wJVonYNTHC\"]},\"@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x85cc5aca68692044586dc5ca19a9868d3288f6b35d1085c620dd0278ed0abdaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47e5b84668f9b898617da72e91a32559c6975357e267559b3e4ace0d0ca4a6a8\",\"dweb:/ipfs/QmUCVFEpcNdHfNpotEDnMRUeAGPShTcxrtzo3xpNJHZ67e\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xafc07f37809f74d9c66d6461cc0f85fb5147ab855acd0acc30af4b2272130c61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e63fa9a8bc793ccbdc82e93f85a4d2d5b66fd3f42303a6f5fe54c5ff230eb81\",\"dweb:/ipfs/QmVMxEw74WgFPqTZjXbYBLbo6gbbjtTocnfBW54Ft6W6Tb\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xd5c50c54bf02740ebd122ff06832546cb5fa84486d52695a9ccfd11666e0c81d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39e096c60a6eb1c6a257122d515496bd92d0c6a693a8f07acb6aa4b1263e95d4\",\"dweb:/ipfs/QmPs5trJBacCiSkezP6tpevapuRYWNY6mqSFzsMCJj7e6B\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"project:/contracts/Implementation/SimpleAccount.sol\":{\"keccak256\":\"0x979b656232559b9c9b929676e8c3a8df9b8156cfd0b0a8be3672f8e98c906f12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9886f742645b6ab4ee4d0595e0804b6e701e9a08b8e343ff4e9d205e8301438\",\"dweb:/ipfs/QmepbThjLxtAkC9rPb1JwM5in3a1fkMdzvVh3fFXtsWSef\"]},\"project:/contracts/Implementation/SimpleAccountFactory.sol\":{\"keccak256\":\"0x8c88930bb4cb134a950d2e9868ceea3d59432296f1257d424d98c128b530dd99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e97e7b236a9e1f5776a03e8722a3a862b0248b5b73b4dc3769e33ff2e80b67f\",\"dweb:/ipfs/QmfFaVfcC8aBNEFqYVduWy5RwP4sj2oSnJgTmgKjfsdGjK\"]},\"project:/contracts/Implementation/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0x3520d7d028dd95a211a75bc0b01b4366e89d7ad0d2898f30917d035f5b2e33f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c317e08b4e647a40598b24ad864f16e7e92ab9115719335b32b3952c9c41eaab\",\"dweb:/ipfs/QmeD1NeKTyojnTUYVrttLPAf8Mo6EMncxtBr9d2Xm2xzXx\"]},\"project:/contracts/UserOperation.sol\":{\"keccak256\":\"0xfa6c24ba5beeab94f178c81d0ac4472ae5107700ac5e629ab5a484fcc3684fbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://594719cefd3cfd961ab41891bcb579fd16bca6c0b167ab252572d851bc83d611\",\"dweb:/ipfs/QmZUWiFz7XFrZFAheUdWpRw4RV3coB1TsyycHggCQCTW8T\"]},\"project:/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x752318098863b797efa91ec9f5970f39c04d4eef2dbf03571f8ed210cba5f350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ea33118e138fbd3c4ad02b830c43b2bf07139cb79275e54c9ddee34a371d4ef\",\"dweb:/ipfs/QmXrztaozJaePo4FhUBcGVFUZxUjGYt3myhbjGDpFUZLni\"]},\"project:/contracts/core/Helpers.sol\":{\"keccak256\":\"0x3b3c0ca3323102f144016013499fdf1a8c900377ffd13593d5308cc16209be9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://630b9423805e39bdc9c91e4f79284205528360e53e95d5b646dd412e0723d5eb\",\"dweb:/ipfs/QmcSi2y9pS7zsuyf2vphweJvXKzuYdThBJZBftbqc6HVeG\"]},\"project:/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xeed5cf6bab9112c491d5486d5b1b0d64a1432f053bd5261157b80f978b8587fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5461c764bc282e5427d0c2d0a6fde31464ebfefe5d27b58f3f2768589b4eaf61\",\"dweb:/ipfs/QmPQ49fZRhJC5Ffj59AQxUyXEAsMBj4HPCBGSJKQtqmtxQ\"]},\"project:/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x280cad00636d9db8dda7492bdc69191d739b9873b19f9dd501c4296bcc963978\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e76ffa569d2c4e9aa0b74c8c697b0e762e5bdf943f59212783d30ac99c60eeb1\",\"dweb:/ipfs/QmbSv64g9W2SCAGLEqpsgx4J1FN8967Ev8nUQM9nK6LUWP\"]},\"project:/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0x37a24a987a6e3a6893040a1d0159e0c7597a849e12de919dee2a44faed102d55\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fc81347699fa9611d22131fe3e5ecbbfbe968149e9ee570d65047a4e9f6ea5cb\",\"dweb:/ipfs/QmQ8BBGWV85Do3SvbCHhfAb18s8WEygqiUstKixnhR5tkv\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516127a23803806127a283398101604081905261002f91610088565b8060405161003c9061007b565b6001600160a01b039091168152602001604051809103906000f080158015610068573d6000803e3d6000fd5b506001600160a01b0316608052506100b8565b611e4a8061095883390190565b60006020828403121561009a57600080fd5b81516001600160a01b03811681146100b157600080fd5b9392505050565b6080516108796100df60003960008181604b0152818160ed01526101ba01526108796000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311464fbe146100465780635fbfb9cf146100895780638cb84e181461009c575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006d610097366004610295565b6100af565b61006d6100aa366004610295565b61017b565b6000806100bc848461017b565b90506001600160a01b0381163b80156100d757509050610175565b6040516001600160a01b038616602482015284907f00000000000000000000000000000000000000000000000000000000000000009060440160408051601f198184030181529181526020820180516001600160e01b031663189acdbd60e31b1790525161014490610288565b61014f9291906102f1565b8190604051809103906000f590508015801561016f573d6000803e3d6000fd5b50925050505b92915050565b600061024f8260001b6040518060200161019490610288565b601f1982820381018352601f9091011660408190526001600160a01b03871660248201527f00000000000000000000000000000000000000000000000000000000000000009060440160408051601f19818403018152918152602080830180516001600160e01b031663189acdbd60e31b1790529051610216939291016102f1565b60408051601f19818403018152908290526102349291602001610333565b60405160208183030381529060405280519060200120610256565b9392505050565b600061024f8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6104e18061036383390190565b600080604083850312156102a857600080fd5b82356001600160a01b03811681146102bf57600080fd5b946020939093013593505050565b60005b838110156102e85781810151838201526020016102d0565b50506000910152565b60018060a01b0383168152604060208201526000825180604084015261031e8160608501602087016102cd565b601f01601f1916919091016060019392505050565b600083516103458184602088016102cd565b8351908301906103598183602088016102cd565b0194935050505056fe60806040526040516104e13803806104e1833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c683836040518060600160405280602781526020016104ba60279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b60b1806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220f526c8eccd3f903e484af5444e2bdc74ab45f3fbc3410f4069528e78e3e8ae7864736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fda4e3cd892b7f93c682b40890e1add8ee1963fce644d108f85664273f3c4a9c64736f6c6343000813003360c0604052306080523480156200001557600080fd5b5060405162001e4a38038062001e4a833981016040819052620000389162000118565b6001600160a01b03811660a0526200004f62000056565b506200014a565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000116576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012b57600080fd5b81516001600160a01b03811681146200014357600080fd5b9392505050565b60805160a051611c94620001b6600039600081816102e301528181610630015281816106b10152818161090e01528181610ab901528181610d370152610fe801526000818161051401528181610554015281816107420152818161078201526108150152611c946000f3fe60806040526004361061010c5760003560e01c806352d1902d11610095578063b61d27f611610064578063b61d27f614610307578063bc197c8114610327578063c399ec8814610356578063c4d66de81461036b578063f23a6e611461038b57600080fd5b806352d1902d146102625780638da5cb5b14610277578063affed0e0146102b6578063b0d691fe146102d457600080fd5b80633659cfe6116100dc5780633659cfe6146101d95780633a871cdd146101f95780634a58db19146102275780634d44560d1461022f5780634f1ef2861461024f57600080fd5b806223de291461011857806301ffc9a71461013f578063150b7a021461017457806318dfb3c7146101b957600080fd5b3661011357005b600080fd5b34801561012457600080fd5b5061013d61013336600461154b565b5050505050505050565b005b34801561014b57600080fd5b5061015f61015a3660046115fc565b6103b8565b60405190151581526020015b60405180910390f35b34801561018057600080fd5b506101a061018f366004611626565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161016b565b3480156101c557600080fd5b5061013d6101d43660046116de565b61040a565b3480156101e557600080fd5b5061013d6101f436600461174a565b61050a565b34801561020557600080fd5b50610219610214366004611767565b6105e9565b60405190815260200161016b565b61013d61062e565b34801561023b57600080fd5b5061013d61024a3660046117bb565b6106a7565b61013d61025d3660046117fd565b610738565b34801561026e57600080fd5b50610219610808565b34801561028357600080fd5b5060015461029e90600160601b90046001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b3480156102c257600080fd5b506001546001600160601b0316610219565b3480156102e057600080fd5b507f000000000000000000000000000000000000000000000000000000000000000061029e565b34801561031357600080fd5b5061013d6103223660046118c1565b6108bb565b34801561033357600080fd5b506101a0610342366004611911565b63bc197c8160e01b98975050505050505050565b34801561036257600080fd5b5061021961090a565b34801561037757600080fd5b5061013d61038636600461174a565b61099c565b34801561039757600080fd5b506101a06103a63660046119af565b63f23a6e6160e01b9695505050505050565b60006001600160e01b03198216630a85bd0160e11b14806103e957506001600160e01b03198216630271189760e51b145b8061040457506001600160e01b031982166301ffc9a760e01b145b92915050565b610412610aae565b82811461045c5760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b83811015610503576104f185858381811061047c5761047c611a2b565b9050602002016020810190610491919061174a565b60008585858181106104a5576104a5611a2b565b90506020028101906104b79190611a41565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b4492505050565b806104fb81611a9e565b91505061045f565b5050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105525760405162461bcd60e51b815260040161045390611ab7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661059b600080516020611c18833981519152546001600160a01b031690565b6001600160a01b0316146105c15760405162461bcd60e51b815260040161045390611b03565b6105ca81610bb4565b604080516000808252602082019092526105e691839190610bbc565b50565b60006105f3610d2c565b6105fd8484610da4565b905061060c6040850185611a41565b905060000361061e5761061e84610e7e565b61062782610f12565b9392505050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b15801561069357600080fd5b505af1158015610503573d6000803e3d6000fd5b6106af610f5f565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036107805760405162461bcd60e51b815260040161045390611ab7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107c9600080516020611c18833981519152546001600160a01b031690565b6001600160a01b0316146107ef5760405162461bcd60e51b815260040161045390611b03565b6107f882610bb4565b61080482826001610bbc565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108a85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610453565b50600080516020611c1883398151915290565b6108c3610aae565b610904848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b4492505050565b50505050565b60007f00000000000000000000000000000000000000000000000000000000000000006040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610973573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109979190611b4f565b905090565b600054610100900460ff16158080156109bc5750600054600160ff909116105b806109d65750303b1580156109d6575060005460ff166001145b610a395760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610453565b6000805460ff191660011790558015610a5c576000805461ff0019166101001790555b610a6582610fb7565b8015610804576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610af65750600154600160601b90046001600160a01b031633145b610b425760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152606401610453565b565b600080846001600160a01b03168484604051610b609190611b8c565b60006040518083038185875af1925050503d8060008114610b9d576040519150601f19603f3d011682016040523d82523d6000602084013e610ba2565b606091505b50915091508161050357805160208201fd5b6105e6610f5f565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610bf457610bef83611034565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610c4e575060408051601f3d908101601f19168201909252610c4b91810190611b4f565b60015b610cb15760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610453565b600080516020611c188339815191528114610d205760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610453565b50610bef8383836110d0565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b425760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610453565b600080610dfe836040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050610e4e610e11610140860186611a41565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525085939250506110f59050565b600154600160601b90046001600160a01b03908116911614610e74576001915050610404565b5060009392505050565b600180546020830135916001600160601b03909116906000610e9f83611ba8565b91906101000a8154816001600160601b0302191690836001600160601b031602179055506001600160601b0316146105e65760405162461bcd60e51b81526020600482015260166024820152756163636f756e743a20696e76616c6964206e6f6e636560501b6044820152606401610453565b80156105e657604051600090339060001990849084818181858888f193505050503d8060008114610503576040519150601f19603f3d011682016040523d82523d6000602084013e610503565b600154600160601b90046001600160a01b0316331480610f7e57503330145b610b425760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610453565b600180546001600160601b0316600160601b6001600160a01b038481168202929092179283905560405192048116917f0000000000000000000000000000000000000000000000000000000000000000909116907f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de90600090a350565b6001600160a01b0381163b6110a15760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610453565b600080516020611c1883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6110d983611119565b6000825111806110e65750805b15610bef576109048383611159565b6000806000611104858561117e565b91509150611111816111c3565b509392505050565b61112281611034565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606106278383604051806060016040528060278152602001611c386027913961130d565b60008082516041036111b45760208301516040840151606085015160001a6111a887828585611385565b945094505050506111bc565b506000905060025b9250929050565b60008160048111156111d7576111d7611bce565b036111df5750565b60018160048111156111f3576111f3611bce565b036112405760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610453565b600281600481111561125457611254611bce565b036112a15760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610453565b60038160048111156112b5576112b5611bce565b036105e65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610453565b6060600080856001600160a01b03168560405161132a9190611b8c565b600060405180830381855af49150503d8060008114611365576040519150601f19603f3d011682016040523d82523d6000602084013e61136a565b606091505b509150915061137b86838387611449565b9695505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156113bc5750600090506003611440565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611410573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661143957600060019250925050611440565b9150600090505b94509492505050565b606083156114b85782516000036114b1576001600160a01b0385163b6114b15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610453565b50816114c2565b6114c283836114ca565b949350505050565b8151156114da5781518083602001fd5b8060405162461bcd60e51b81526004016104539190611be4565b6001600160a01b03811681146105e657600080fd5b60008083601f84011261151b57600080fd5b50813567ffffffffffffffff81111561153357600080fd5b6020830191508360208285010111156111bc57600080fd5b60008060008060008060008060c0898b03121561156757600080fd5b8835611572816114f4565b97506020890135611582816114f4565b96506040890135611592816114f4565b955060608901359450608089013567ffffffffffffffff808211156115b657600080fd5b6115c28c838d01611509565b909650945060a08b01359150808211156115db57600080fd5b506115e88b828c01611509565b999c989b5096995094979396929594505050565b60006020828403121561160e57600080fd5b81356001600160e01b03198116811461062757600080fd5b60008060008060006080868803121561163e57600080fd5b8535611649816114f4565b94506020860135611659816114f4565b935060408601359250606086013567ffffffffffffffff81111561167c57600080fd5b61168888828901611509565b969995985093965092949392505050565b60008083601f8401126116ab57600080fd5b50813567ffffffffffffffff8111156116c357600080fd5b6020830191508360208260051b85010111156111bc57600080fd5b600080600080604085870312156116f457600080fd5b843567ffffffffffffffff8082111561170c57600080fd5b61171888838901611699565b9096509450602087013591508082111561173157600080fd5b5061173e87828801611699565b95989497509550505050565b60006020828403121561175c57600080fd5b8135610627816114f4565b60008060006060848603121561177c57600080fd5b833567ffffffffffffffff81111561179357600080fd5b840161016081870312156117a657600080fd5b95602085013595506040909401359392505050565b600080604083850312156117ce57600080fd5b82356117d9816114f4565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561181057600080fd5b823561181b816114f4565b9150602083013567ffffffffffffffff8082111561183857600080fd5b818501915085601f83011261184c57600080fd5b81358181111561185e5761185e6117e7565b604051601f8201601f19908116603f01168101908382118183101715611886576118866117e7565b8160405282815288602084870101111561189f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080606085870312156118d757600080fd5b84356118e2816114f4565b935060208501359250604085013567ffffffffffffffff81111561190557600080fd5b61173e87828801611509565b60008060008060008060008060a0898b03121561192d57600080fd5b8835611938816114f4565b97506020890135611948816114f4565b9650604089013567ffffffffffffffff8082111561196557600080fd5b6119718c838d01611699565b909850965060608b013591508082111561198a57600080fd5b6119968c838d01611699565b909650945060808b01359150808211156115db57600080fd5b60008060008060008060a087890312156119c857600080fd5b86356119d3816114f4565b955060208701356119e3816114f4565b94506040870135935060608701359250608087013567ffffffffffffffff811115611a0d57600080fd5b611a1989828a01611509565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611a5857600080fd5b83018035915067ffffffffffffffff821115611a7357600080fd5b6020019150368190038213156111bc57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611ab057611ab0611a88565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215611b6157600080fd5b5051919050565b60005b83811015611b83578181015183820152602001611b6b565b50506000910152565b60008251611b9e818460208701611b68565b9190910192915050565b60006001600160601b03808316818103611bc457611bc4611a88565b6001019392505050565b634e487b7160e01b600052602160045260246000fd5b6020815260008251806020840152611c03816040850160208701611b68565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f625dc989050fe86ffc6c3b5bc082802a68d0d2bfcec45921c6870967a7fa3cd64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806311464fbe146100465780635fbfb9cf146100895780638cb84e181461009c575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006d610097366004610295565b6100af565b61006d6100aa366004610295565b61017b565b6000806100bc848461017b565b90506001600160a01b0381163b80156100d757509050610175565b6040516001600160a01b038616602482015284907f00000000000000000000000000000000000000000000000000000000000000009060440160408051601f198184030181529181526020820180516001600160e01b031663189acdbd60e31b1790525161014490610288565b61014f9291906102f1565b8190604051809103906000f590508015801561016f573d6000803e3d6000fd5b50925050505b92915050565b600061024f8260001b6040518060200161019490610288565b601f1982820381018352601f9091011660408190526001600160a01b03871660248201527f00000000000000000000000000000000000000000000000000000000000000009060440160408051601f19818403018152918152602080830180516001600160e01b031663189acdbd60e31b1790529051610216939291016102f1565b60408051601f19818403018152908290526102349291602001610333565b60405160208183030381529060405280519060200120610256565b9392505050565b600061024f8383306000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6104e18061036383390190565b600080604083850312156102a857600080fd5b82356001600160a01b03811681146102bf57600080fd5b946020939093013593505050565b60005b838110156102e85781810151838201526020016102d0565b50506000910152565b60018060a01b0383168152604060208201526000825180604084015261031e8160608501602087016102cd565b601f01601f1916919091016060019392505050565b600083516103458184602088016102cd565b8351908301906103598183602088016102cd565b0194935050505056fe60806040526040516104e13803806104e1833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c683836040518060600160405280602781526020016104ba60279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b60b1806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220f526c8eccd3f903e484af5444e2bdc74ab45f3fbc3410f4069528e78e3e8ae7864736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220fda4e3cd892b7f93c682b40890e1add8ee1963fce644d108f85664273f3c4a9c64736f6c63430008130033",
  "immutableReferences": {
    "3400": [
      {
        "length": 32,
        "start": 75
      },
      {
        "length": 32,
        "start": 237
      },
      {
        "length": 32,
        "start": 442
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:554:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:209:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "161:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "173:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "163:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "163:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "163:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "136:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "145:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "132:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "132:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "157:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "128:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "128:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "125:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "186:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "199:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "199:16:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "190:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "278:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "290:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "280:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "280:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "280:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "237:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "248:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "263:3:32",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "268:1:32",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "259:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "259:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "272:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "255:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "255:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "244:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "244:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "234:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "234:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "227:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "227:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "224:70:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IEntryPoint_$4740_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "81:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "92:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "104:6:32",
                "type": ""
              }
            ],
            "src": "14:310:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "450:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "460:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "472:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "483:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "468:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "468:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "460:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "502:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "517:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "533:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "538:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "529:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "529:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "542:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "525:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "525:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "513:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "513:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IEntryPoint_$4740__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "419:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "430:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "441:4:32",
                "type": ""
              }
            ],
            "src": "329:223:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IEntryPoint_$4740_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IEntryPoint_$4740__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2064:32",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:32",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "145:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "155:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "178:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "163:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "163:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "155:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "197:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "212:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "228:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "233:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "224:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "224:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "237:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "208:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "208:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "190:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "190:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "190:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_SimpleAccount_$3391__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "114:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "125:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "136:4:32",
                "type": ""
              }
            ],
            "src": "14:233:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "339:267:32",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "385:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "394:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "397:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "387:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "387:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "387:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "360:7:32"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "369:9:32"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "356:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "356:23:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "381:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "352:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "352:32:32"
                  },
                  "nodeType": "YulIf",
                  "src": "349:52:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "410:36:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "436:9:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "423:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "423:23:32"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "414:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "509:16:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "518:1:32",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "521:1:32",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "511:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "511:12:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "511:12:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "468:5:32"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "479:5:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "494:3:32",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "499:1:32",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "490:3:32"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "490:11:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "503:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "486:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "486:19:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "475:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "475:31:32"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "465:2:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "465:42:32"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "458:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "458:50:32"
                  },
                  "nodeType": "YulIf",
                  "src": "455:70:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "534:15:32",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "544:5:32"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "534:6:32"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "558:42:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "585:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "596:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "581:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "581:18:32"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "568:12:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:32:32"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "558:6:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "297:9:32",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "308:7:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "320:6:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "328:6:32",
                "type": ""
              }
            ],
            "src": "252:354:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "712:102:32",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "722:26:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "734:9:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "745:2:32",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "730:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "730:18:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "722:4:32"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "764:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "779:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "795:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "800:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "791:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "791:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "804:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "787:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "787:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "775:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "775:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "757:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "757:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "757:51:32"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "681:9:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "692:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "703:4:32",
                "type": ""
              }
            ],
            "src": "611:203:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "885:184:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "895:10:32",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "904:1:32",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "899:1:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "964:63:32",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "989:3:32"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "994:1:32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "985:3:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "985:11:32"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "1008:3:32"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1013:1:32"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1004:3:32"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1004:11:32"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "998:5:32"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "998:18:32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "978:6:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "978:39:32"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "978:39:32"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "925:1:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "928:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "922:2:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:13:32"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "936:19:32",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "938:15:32",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "947:1:32"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "950:2:32",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "943:3:32"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "943:10:32"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "938:1:32"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "918:3:32",
                    "statements": []
                  },
                  "src": "914:113:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1047:3:32"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1052:6:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1043:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1043:16:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1061:1:32",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1036:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1036:27:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1036:27:32"
                }
              ]
            },
            "name": "copy_memory_to_memory_with_cleanup",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "863:3:32",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "868:3:32",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "873:6:32",
                "type": ""
              }
            ],
            "src": "819:250:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1221:344:32",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1238:9:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1253:6:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1269:3:32",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1274:1:32",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1265:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1265:11:32"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1278:1:32",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1261:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1261:19:32"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:32:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1231:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:51:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1231:51:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1302:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1313:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1298:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1298:18:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1318:2:32",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:30:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1291:30:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1330:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1350:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1344:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1344:13:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1334:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1388:2:32",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1373:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:18:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1393:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1366:6:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1366:34:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1366:34:32"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1448:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1456:2:32",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1444:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1444:15:32"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1465:9:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1476:2:32",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1461:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1461:18:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1481:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "1409:34:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1409:79:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1409:79:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1497:62:32",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1513:9:32"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1532:6:32"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1540:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1528:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1528:15:32"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1549:2:32",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1545:3:32"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1545:7:32"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1524:3:32"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1524:29:32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1509:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1509:45:32"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1556:2:32",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1505:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1505:54:32"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1497:4:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1182:9:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1193:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1201:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1212:4:32",
                "type": ""
              }
            ],
            "src": "1074:491:32"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1753:309:32",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1763:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1783:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1777:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1777:13:32"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1767:6:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1838:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1846:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1834:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1834:17:32"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1853:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1858:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "1799:34:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1799:66:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1799:66:32"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1874:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1891:3:32"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1896:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1887:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1887:16:32"
                  },
                  "variables": [
                    {
                      "name": "end_1",
                      "nodeType": "YulTypedName",
                      "src": "1878:5:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1912:29:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1934:6:32"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1928:5:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1928:13:32"
                  },
                  "variables": [
                    {
                      "name": "length_1",
                      "nodeType": "YulTypedName",
                      "src": "1916:8:32",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1989:6:32"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1997:4:32",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1985:3:32"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1985:17:32"
                      },
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "2004:5:32"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2011:8:32"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory_with_cleanup",
                      "nodeType": "YulIdentifier",
                      "src": "1950:34:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1950:70:32"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1950:70:32"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2029:27:32",
                  "value": {
                    "arguments": [
                      {
                        "name": "end_1",
                        "nodeType": "YulIdentifier",
                        "src": "2040:5:32"
                      },
                      {
                        "name": "length_1",
                        "nodeType": "YulIdentifier",
                        "src": "2047:8:32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2036:3:32"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2036:20:32"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2029:3:32"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1721:3:32",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1726:6:32",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1734:6:32",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1745:3:32",
                "type": ""
              }
            ],
            "src": "1570:492:32"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_SimpleAccount_$3391__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        let length := mload(value1)\n        mstore(add(headStart, 64), length)\n        copy_memory_to_memory_with_cleanup(add(value1, 32), add(headStart, 96), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n}",
      "id": 32,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "609:1893:20:-:0;;;707:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;797:11;779:30;;;;;:::i;:::-;-1:-1:-1;;;;;513:32:32;;;495:51;;483:2;468:18;779:30:20;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;755:54:20;;;-1:-1:-1;609:1893:20;;;;;;;;;;:::o;14:310:32:-;104:6;157:2;145:9;136:7;132:23;128:32;125:52;;;173:1;170;163:12;125:52;199:16;;-1:-1:-1;;;;;244:31:32;;234:42;;224:70;;290:1;287;280:12;224:70;313:5;14:310;-1:-1:-1;;;14:310:32:o;329:223::-;609:1893:20;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "609:1893:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;646:52;;;;;;;;-1:-1:-1;;;;;208:32:32;;;190:51;;178:2;163:18;646:52:20;;;;;;;1205:580;;;;;;:::i;:::-;;:::i;1915:584::-;;;;;;:::i;:::-;;:::i;1205:580::-;1298:17;1328:12;1343:23;1354:5;1361:4;1343:10;:23::i;:::-;1328:38;-1:-1:-1;;;;;;1393:16:20;;;1424:12;;1420:80;;-1:-1:-1;1482:4:20;-1:-1:-1;1453:35:20;;1420:80;1683:49;;-1:-1:-1;;;;;208:32:32;;1683:49:20;;;190:51:32;1601:4:20;;1638:21;;163:18:32;;1683:49:20;;;-1:-1:-1;;1683:49:20;;;;;;;;;;;;;;-1:-1:-1;;;;;1683:49:20;-1:-1:-1;;;1683:49:20;;;1570:181;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:267;;1317:468;;1205:580;;;;;:::o;1915:584::-;2010:7;2050:441;2099:4;2091:13;;2198:31;;;;;;;;:::i;:::-;-1:-1:-1;;2198:31:20;;;;;;;;;;;;;;;;-1:-1:-1;;;;;208:32:32;;2358:49:20;;;190:51:32;2305:21:20;;163:18:32;;2358:49:20;;;-1:-1:-1;;2358:49:20;;;;;;;;;;;;;;;-1:-1:-1;;;;;2358:49:20;-1:-1:-1;;;2358:49:20;;;2256:178;;;;;2358:49;2256:178;;:::i;:::-;;;;-1:-1:-1;;2256:178:20;;;;;;;;;;2155:302;;;2256:178;2155:302;;:::i;:::-;;;;;;;;;;;;;2123:353;;;;;;2050:22;:441::i;:::-;2030:461;1915:584;-1:-1:-1;;;1915:584:20:o;1799:165:11:-;1882:7;1908:49;1923:4;1929:12;1951:4;2338:12;2445:4;2439:11;3664:12;3657:4;3652:3;3648:14;3641:36;3713:4;3706;3701:3;3697:14;3690:28;3743:8;3738:3;3731:21;3836:4;3831:3;3827:14;3814:27;;3947:4;3940:5;3932:20;3990:2;3973:20;;;2207:1802;-1:-1:-1;;;;2207:1802:11:o;-1:-1:-1:-;;;;;;;;:::o;252:354:32:-;320:6;328;381:2;369:9;360:7;356:23;352:32;349:52;;;397:1;394;387:12;349:52;423:23;;-1:-1:-1;;;;;475:31:32;;465:42;;455:70;;521:1;518;511:12;455:70;544:5;596:2;581:18;;;;568:32;;-1:-1:-1;;;252:354:32:o;819:250::-;904:1;914:113;928:6;925:1;922:13;914:113;;;1004:11;;;998:18;985:11;;;978:39;950:2;943:10;914:113;;;-1:-1:-1;;1061:1:32;1043:16;;1036:27;819:250::o;1074:491::-;1278:1;1274;1269:3;1265:11;1261:19;1253:6;1249:32;1238:9;1231:51;1318:2;1313;1302:9;1298:18;1291:30;1212:4;1350:6;1344:13;1393:6;1388:2;1377:9;1373:18;1366:34;1409:79;1481:6;1476:2;1465:9;1461:18;1456:2;1448:6;1444:15;1409:79;:::i;:::-;1549:2;1528:15;-1:-1:-1;;1524:29:32;1509:45;;;;1556:2;1505:54;;1074:491;-1:-1:-1;;;1074:491:32:o;1570:492::-;1745:3;1783:6;1777:13;1799:66;1858:6;1853:3;1846:4;1838:6;1834:17;1799:66;:::i;:::-;1928:13;;1887:16;;;;1950:70;1928:13;1887:16;1997:4;1985:17;;1950:70;:::i;:::-;2036:20;;1570:492;-1:-1:-1;;;;1570:492:32:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/utils/Create2.sol\";\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\r\n\r\nimport \"./SimpleAccount.sol\";\r\n\r\n/**\r\n * A sample factory contract for SimpleAccount\r\n * A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\r\n * The factory's createAccount returns the target account address even if it is already installed.\r\n * This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\r\n */\r\ncontract SimpleAccountFactory {\r\n    SimpleAccount public immutable accountImplementation;\r\n\r\n    constructor(IEntryPoint _entryPoint) {\r\n        accountImplementation = new SimpleAccount(_entryPoint);\r\n    }\r\n\r\n    /**\r\n     * create an account, and return its address.\r\n     * returns the address even if the account is already deployed.\r\n     * Note that during UserOperation execution, this method is called only if the account is not deployed.\r\n     * This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\r\n     */\r\n    function createAccount(\r\n        address owner,\r\n        uint256 salt\r\n    ) public returns (SimpleAccount ret) {\r\n        address addr = getAddress(owner, salt);\r\n        uint codeSize = addr.code.length;\r\n        if (codeSize > 0) {\r\n            return SimpleAccount(payable(addr));\r\n        }\r\n        ret = SimpleAccount(\r\n            payable(\r\n                new ERC1967Proxy{salt: bytes32(salt)}(\r\n                    address(accountImplementation),\r\n                    abi.encodeCall(SimpleAccount.initialize, (owner))\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    /**\r\n     * calculate the counterfactual address of this account as it would be returned by createAccount()\r\n     */\r\n    function getAddress(\r\n        address owner,\r\n        uint256 salt\r\n    ) public view returns (address) {\r\n        return\r\n            Create2.computeAddress(\r\n                bytes32(salt),\r\n                keccak256(\r\n                    abi.encodePacked(\r\n                        type(ERC1967Proxy).creationCode,\r\n                        abi.encode(\r\n                            address(accountImplementation),\r\n                            abi.encodeCall(SimpleAccount.initialize, (owner))\r\n                        )\r\n                    )\r\n                )\r\n            );\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\Ghadi\\Desktop\\Portfolio\\Projects\\Account-Abstraction\\Smart-Contract-Wallet\\account-abstraction-contracts\\contracts\\Implementation\\SimpleAccountFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Implementation/SimpleAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        1120
      ],
      "BaseAccount": [
        4280
      ],
      "Create2": [
        1201
      ],
      "ECDSA": [
        1797
      ],
      "ERC1967Proxy": [
        46
      ],
      "ERC1967Upgrade": [
        364
      ],
      "IAggregator": [
        4542
      ],
      "IBeacon": [
        426
      ],
      "IERC1155Receiver": [
        752
      ],
      "IERC165": [
        1809
      ],
      "IERC1822Proxiable": [
        9
      ],
      "IERC721Receiver": [
        770
      ],
      "IERC777Recipient": [
        790
      ],
      "IEntryPoint": [
        4740
      ],
      "IStakeManager": [
        4845
      ],
      "Initializable": [
        595
      ],
      "Math": [
        2674
      ],
      "Proxy": [
        416
      ],
      "SimpleAccount": [
        3391
      ],
      "SimpleAccountFactory": [
        3523
      ],
      "StorageSlot": [
        1261
      ],
      "Strings": [
        1436
      ],
      "TokenCallbackHandler": [
        3647
      ],
      "UUPSUpgradeable": [
        711
      ],
      "UserOperation": [
        4042
      ],
      "UserOperationLib": [
        4147
      ],
      "ValidationData": [
        4289
      ],
      "_intersectTimeRange": [
        4433
      ],
      "_packValidationData": [
        4470,
        4508
      ],
      "_parseValidationData": [
        4348
      ]
    },
    "id": 3524,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3393,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 3394,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3524,
        "sourceUnit": 1202,
        "src": "60:51:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "id": 3395,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3524,
        "sourceUnit": 47,
        "src": "113:64:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Implementation/SimpleAccount.sol",
        "file": "./SimpleAccount.sol",
        "id": 3396,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3524,
        "sourceUnit": 3392,
        "src": "181:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleAccountFactory",
        "contractDependencies": [
          46,
          3391
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3397,
          "nodeType": "StructuredDocumentation",
          "src": "214:393:20",
          "text": " A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 3523,
        "linearizedBaseContracts": [
          3523
        ],
        "name": "SimpleAccountFactory",
        "nameLocation": "618:20:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 3400,
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "677:21:20",
            "nodeType": "VariableDeclaration",
            "scope": 3523,
            "src": "646:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleAccount_$3391",
              "typeString": "contract SimpleAccount"
            },
            "typeName": {
              "id": 3399,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3398,
                "name": "SimpleAccount",
                "nameLocations": [
                  "646:13:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3391,
                "src": "646:13:20"
              },
              "referencedDeclaration": 3391,
              "src": "646:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                "typeString": "contract SimpleAccount"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3414,
              "nodeType": "Block",
              "src": "744:73:20",
              "statements": [
                {
                  "expression": {
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3406,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3400,
                      "src": "755:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3410,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3403,
                          "src": "797:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 3409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "779:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$4740_$returns$_t_contract$_SimpleAccount_$3391_$",
                          "typeString": "function (contract IEntryPoint) returns (contract SimpleAccount)"
                        },
                        "typeName": {
                          "id": 3408,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3407,
                            "name": "SimpleAccount",
                            "nameLocations": [
                              "783:13:20"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3391,
                            "src": "783:13:20"
                          },
                          "referencedDeclaration": 3391,
                          "src": "783:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                            "typeString": "contract SimpleAccount"
                          }
                        }
                      },
                      "id": 3411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "779:30:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "src": "755:54:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "755:54:20"
                }
              ]
            },
            "id": 3415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3403,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "731:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3415,
                  "src": "719:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 3402,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3401,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "719:11:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4740,
                      "src": "719:11:20"
                    },
                    "referencedDeclaration": 4740,
                    "src": "719:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:25:20"
            },
            "returnParameters": {
              "id": 3405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:0:20"
            },
            "scope": 3523,
            "src": "707:110:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3479,
              "nodeType": "Block",
              "src": "1317:468:20",
              "statements": [
                {
                  "assignments": [
                    3427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3427,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1336:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3479,
                      "src": "1328:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3426,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1328:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3432,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3429,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "1354:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3430,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "1361:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3428,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3522,
                      "src": "1343:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) view returns (address)"
                      }
                    },
                    "id": 3431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:23:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1328:38:20"
                },
                {
                  "assignments": [
                    3434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3434,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1382:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3479,
                      "src": "1377:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3433,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1377:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3438,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 3435,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "1393:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1398:4:20",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1393:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1403:6:20",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1393:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1377:32:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3439,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3434,
                      "src": "1424:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1435:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1424:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3450,
                  "nodeType": "IfStatement",
                  "src": "1420:80:20",
                  "trueBody": {
                    "id": 3449,
                    "nodeType": "Block",
                    "src": "1438:62:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3445,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3427,
                                  "src": "1482:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1474:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 3443,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1474:8:20",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1474:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3442,
                            "name": "SimpleAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3391,
                            "src": "1460:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                              "typeString": "type(contract SimpleAccount)"
                            }
                          },
                          "id": 3447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1460:28:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                            "typeString": "contract SimpleAccount"
                          }
                        },
                        "functionReturnParameters": 3425,
                        "id": 3448,
                        "nodeType": "Return",
                        "src": "1453:35:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3451,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3424,
                      "src": "1510:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3465,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3400,
                                      "src": "1638:21:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                        "typeString": "contract SimpleAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                        "typeString": "contract SimpleAccount"
                                      }
                                    ],
                                    "id": 3464,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1630:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3463,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1630:7:20",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1630:30:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3469,
                                        "name": "SimpleAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3391,
                                        "src": "1698:13:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                                          "typeString": "type(contract SimpleAccount)"
                                        }
                                      },
                                      "id": 3470,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1712:10:20",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3215,
                                      "src": "1698:24:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function SimpleAccount.initialize(address)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 3471,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3418,
                                          "src": "1725:5:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "id": 3472,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1724:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function SimpleAccount.initialize(address)"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3467,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "1683:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 3468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1687:10:20",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1683:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 3473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1683:49:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 3457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1570:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$46_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 3456,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3455,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "1574:12:20"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 46,
                                      "src": "1574:12:20"
                                    },
                                    "referencedDeclaration": 46,
                                    "src": "1574:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$46",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 3462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3460,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3420,
                                        "src": "1601:4:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 3459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1593:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 3458,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1593:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1593:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1570:37:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$46_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 3474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1570:181:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$46",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$46",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 3454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1544:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3453,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1544:8:20",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:222:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3452,
                        "name": "SimpleAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "1516:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                          "typeString": "type(contract SimpleAccount)"
                        }
                      },
                      "id": 3476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1516:261:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "src": "1510:267:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "id": 3478,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:267:20"
                }
              ]
            },
            "documentation": {
              "id": 3416,
              "nodeType": "StructuredDocumentation",
              "src": "825:374:20",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "5fbfb9cf",
            "id": 3480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1214:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3418,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1246:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3480,
                  "src": "1238:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3420,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1270:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3480,
                  "src": "1262:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:54:20"
            },
            "returnParameters": {
              "id": 3425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3424,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1312:3:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3480,
                  "src": "1298:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                    "typeString": "contract SimpleAccount"
                  },
                  "typeName": {
                    "id": 3423,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3422,
                      "name": "SimpleAccount",
                      "nameLocations": [
                        "1298:13:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3391,
                      "src": "1298:13:20"
                    },
                    "referencedDeclaration": 3391,
                    "src": "1298:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:19:20"
            },
            "scope": 3523,
            "src": "1205:580:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3521,
              "nodeType": "Block",
              "src": "2019:480:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3494,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3485,
                            "src": "2099:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2091:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3492,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2091:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2091:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3500,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "2203:12:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$46_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$46_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 3499,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "2198:4:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 3501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2198:18:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$46",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 3502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2217:12:20",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "2198:31:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3507,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3400,
                                        "src": "2305:21:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                          "typeString": "contract SimpleAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                          "typeString": "contract SimpleAccount"
                                        }
                                      ],
                                      "id": 3506,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2297:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3505,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2297:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2297:30:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 3511,
                                          "name": "SimpleAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3391,
                                          "src": "2373:13:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                                            "typeString": "type(contract SimpleAccount)"
                                          }
                                        },
                                        "id": 3512,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2387:10:20",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3215,
                                        "src": "2373:24:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function SimpleAccount.initialize(address)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 3513,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3483,
                                            "src": "2400:5:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "id": 3514,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2399:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function SimpleAccount.initialize(address)"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3509,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2358:3:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 3510,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2362:10:20",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2358:14:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 3515,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2358:49:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3503,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "2256:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 3504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2260:6:20",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2256:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 3516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2256:178:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3497,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "2155:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2159:12:20",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2155:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2155:302:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3496,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2123:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2123:353:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3490,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "2050:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$1201_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 3491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2058:14:20",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1186,
                      "src": "2050:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 3519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:441:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3489,
                  "id": 3520,
                  "nodeType": "Return",
                  "src": "2030:461:20"
                }
              ]
            },
            "documentation": {
              "id": 3481,
              "nodeType": "StructuredDocumentation",
              "src": "1793:116:20",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "8cb84e18",
            "id": 3522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1924:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3483,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1953:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "1945:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3485,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1977:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "1969:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:54:20"
            },
            "returnParameters": {
              "id": 3489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "2010:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2009:9:20"
            },
            "scope": 3523,
            "src": "1915:584:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3524,
        "src": "609:1893:20",
        "usedErrors": []
      }
    ],
    "src": "33:2471:20"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Implementation/SimpleAccountFactory.sol",
    "exportedSymbols": {
      "Address": [
        1120
      ],
      "BaseAccount": [
        4280
      ],
      "Create2": [
        1201
      ],
      "ECDSA": [
        1797
      ],
      "ERC1967Proxy": [
        46
      ],
      "ERC1967Upgrade": [
        364
      ],
      "IAggregator": [
        4542
      ],
      "IBeacon": [
        426
      ],
      "IERC1155Receiver": [
        752
      ],
      "IERC165": [
        1809
      ],
      "IERC1822Proxiable": [
        9
      ],
      "IERC721Receiver": [
        770
      ],
      "IERC777Recipient": [
        790
      ],
      "IEntryPoint": [
        4740
      ],
      "IStakeManager": [
        4845
      ],
      "Initializable": [
        595
      ],
      "Math": [
        2674
      ],
      "Proxy": [
        416
      ],
      "SimpleAccount": [
        3391
      ],
      "SimpleAccountFactory": [
        3523
      ],
      "StorageSlot": [
        1261
      ],
      "Strings": [
        1436
      ],
      "TokenCallbackHandler": [
        3647
      ],
      "UUPSUpgradeable": [
        711
      ],
      "UserOperation": [
        4042
      ],
      "UserOperationLib": [
        4147
      ],
      "ValidationData": [
        4289
      ],
      "_intersectTimeRange": [
        4433
      ],
      "_packValidationData": [
        4470,
        4508
      ],
      "_parseValidationData": [
        4348
      ]
    },
    "id": 3524,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3393,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:20"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "id": 3394,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3524,
        "sourceUnit": 1202,
        "src": "60:51:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "id": 3395,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3524,
        "sourceUnit": 47,
        "src": "113:64:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Implementation/SimpleAccount.sol",
        "file": "./SimpleAccount.sol",
        "id": 3396,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3524,
        "sourceUnit": 3392,
        "src": "181:29:20",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleAccountFactory",
        "contractDependencies": [
          46,
          3391
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3397,
          "nodeType": "StructuredDocumentation",
          "src": "214:393:20",
          "text": " A sample factory contract for SimpleAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "id": 3523,
        "linearizedBaseContracts": [
          3523
        ],
        "name": "SimpleAccountFactory",
        "nameLocation": "618:20:20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "11464fbe",
            "id": 3400,
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "677:21:20",
            "nodeType": "VariableDeclaration",
            "scope": 3523,
            "src": "646:52:20",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleAccount_$3391",
              "typeString": "contract SimpleAccount"
            },
            "typeName": {
              "id": 3399,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3398,
                "name": "SimpleAccount",
                "nameLocations": [
                  "646:13:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3391,
                "src": "646:13:20"
              },
              "referencedDeclaration": 3391,
              "src": "646:13:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                "typeString": "contract SimpleAccount"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3414,
              "nodeType": "Block",
              "src": "744:73:20",
              "statements": [
                {
                  "expression": {
                    "id": 3412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3406,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3400,
                      "src": "755:21:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 3410,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3403,
                          "src": "797:11:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 3409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "779:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$4740_$returns$_t_contract$_SimpleAccount_$3391_$",
                          "typeString": "function (contract IEntryPoint) returns (contract SimpleAccount)"
                        },
                        "typeName": {
                          "id": 3408,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3407,
                            "name": "SimpleAccount",
                            "nameLocations": [
                              "783:13:20"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3391,
                            "src": "783:13:20"
                          },
                          "referencedDeclaration": 3391,
                          "src": "783:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                            "typeString": "contract SimpleAccount"
                          }
                        }
                      },
                      "id": 3411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "779:30:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "src": "755:54:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "id": 3413,
                  "nodeType": "ExpressionStatement",
                  "src": "755:54:20"
                }
              ]
            },
            "id": 3415,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3403,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "731:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3415,
                  "src": "719:23:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 3402,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3401,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "719:11:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4740,
                      "src": "719:11:20"
                    },
                    "referencedDeclaration": 4740,
                    "src": "719:11:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$4740",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:25:20"
            },
            "returnParameters": {
              "id": 3405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:0:20"
            },
            "scope": 3523,
            "src": "707:110:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3479,
              "nodeType": "Block",
              "src": "1317:468:20",
              "statements": [
                {
                  "assignments": [
                    3427
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3427,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1336:4:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3479,
                      "src": "1328:12:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 3426,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1328:7:20",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3432,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3429,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3418,
                        "src": "1354:5:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3430,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3420,
                        "src": "1361:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3428,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3522,
                      "src": "1343:10:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (address,uint256) view returns (address)"
                      }
                    },
                    "id": 3431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:23:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1328:38:20"
                },
                {
                  "assignments": [
                    3434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3434,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1382:8:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 3479,
                      "src": "1377:13:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3433,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1377:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3438,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 3435,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3427,
                        "src": "1393:4:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 3436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1398:4:20",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1393:9:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 3437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1403:6:20",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1393:16:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1377:32:20"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3439,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3434,
                      "src": "1424:8:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1435:1:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1424:12:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3450,
                  "nodeType": "IfStatement",
                  "src": "1420:80:20",
                  "trueBody": {
                    "id": 3449,
                    "nodeType": "Block",
                    "src": "1438:62:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3445,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3427,
                                  "src": "1482:4:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1474:8:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 3443,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1474:8:20",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1474:13:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 3442,
                            "name": "SimpleAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3391,
                            "src": "1460:13:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                              "typeString": "type(contract SimpleAccount)"
                            }
                          },
                          "id": 3447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1460:28:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                            "typeString": "contract SimpleAccount"
                          }
                        },
                        "functionReturnParameters": 3425,
                        "id": 3448,
                        "nodeType": "Return",
                        "src": "1453:35:20"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 3477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3451,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3424,
                      "src": "1510:3:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 3465,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3400,
                                      "src": "1638:21:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                        "typeString": "contract SimpleAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                        "typeString": "contract SimpleAccount"
                                      }
                                    ],
                                    "id": 3464,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1630:7:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 3463,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1630:7:20",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 3466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1630:30:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 3469,
                                        "name": "SimpleAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3391,
                                        "src": "1698:13:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                                          "typeString": "type(contract SimpleAccount)"
                                        }
                                      },
                                      "id": 3470,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1712:10:20",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 3215,
                                      "src": "1698:24:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function SimpleAccount.initialize(address)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 3471,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3418,
                                          "src": "1725:5:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "id": 3472,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1724:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function SimpleAccount.initialize(address)"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3467,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "1683:3:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 3468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1687:10:20",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1683:14:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 3473,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1683:49:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 3457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1570:16:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$46_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 3456,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 3455,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "1574:12:20"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 46,
                                      "src": "1574:12:20"
                                    },
                                    "referencedDeclaration": 46,
                                    "src": "1574:12:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$46",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 3462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3460,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3420,
                                        "src": "1601:4:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 3459,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1593:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 3458,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1593:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1593:13:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1570:37:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$46_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 3474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1570:181:20",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$46",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$46",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 3454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1544:8:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 3453,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1544:8:20",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1544:222:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3452,
                        "name": "SimpleAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3391,
                        "src": "1516:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                          "typeString": "type(contract SimpleAccount)"
                        }
                      },
                      "id": 3476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1516:261:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                        "typeString": "contract SimpleAccount"
                      }
                    },
                    "src": "1510:267:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "id": 3478,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:267:20"
                }
              ]
            },
            "documentation": {
              "id": 3416,
              "nodeType": "StructuredDocumentation",
              "src": "825:374:20",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "5fbfb9cf",
            "id": 3480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1214:13:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3418,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1246:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3480,
                  "src": "1238:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3420,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1270:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3480,
                  "src": "1262:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:54:20"
            },
            "returnParameters": {
              "id": 3425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3424,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1312:3:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3480,
                  "src": "1298:17:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                    "typeString": "contract SimpleAccount"
                  },
                  "typeName": {
                    "id": 3423,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3422,
                      "name": "SimpleAccount",
                      "nameLocations": [
                        "1298:13:20"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3391,
                      "src": "1298:13:20"
                    },
                    "referencedDeclaration": 3391,
                    "src": "1298:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                      "typeString": "contract SimpleAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:19:20"
            },
            "scope": 3523,
            "src": "1205:580:20",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3521,
              "nodeType": "Block",
              "src": "2019:480:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3494,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3485,
                            "src": "2099:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 3493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2091:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 3492,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2091:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2091:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 3500,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 46,
                                      "src": "2203:12:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$46_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$46_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 3499,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967269,
                                    "src": "2198:4:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 3501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2198:18:20",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$46",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 3502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2217:12:20",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "2198:31:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 3507,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3400,
                                        "src": "2305:21:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                          "typeString": "contract SimpleAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_SimpleAccount_$3391",
                                          "typeString": "contract SimpleAccount"
                                        }
                                      ],
                                      "id": 3506,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2297:7:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 3505,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2297:7:20",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 3508,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2297:30:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 3511,
                                          "name": "SimpleAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3391,
                                          "src": "2373:13:20",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_SimpleAccount_$3391_$",
                                            "typeString": "type(contract SimpleAccount)"
                                          }
                                        },
                                        "id": 3512,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2387:10:20",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3215,
                                        "src": "2373:24:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function SimpleAccount.initialize(address)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 3513,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3483,
                                            "src": "2400:5:20",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "id": 3514,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2399:7:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function SimpleAccount.initialize(address)"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 3509,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "2358:3:20",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 3510,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2362:10:20",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2358:14:20",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 3515,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2358:49:20",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3503,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "2256:3:20",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 3504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2260:6:20",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2256:10:20",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 3516,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2256:178:20",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 3497,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "2155:3:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2159:12:20",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2155:16:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2155:302:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3496,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "2123:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2123:353:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 3490,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1201,
                        "src": "2050:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$1201_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 3491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2058:14:20",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1186,
                      "src": "2050:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 3519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:441:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3489,
                  "id": 3520,
                  "nodeType": "Return",
                  "src": "2030:461:20"
                }
              ]
            },
            "documentation": {
              "id": 3481,
              "nodeType": "StructuredDocumentation",
              "src": "1793:116:20",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "8cb84e18",
            "id": 3522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1924:10:20",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3483,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1953:5:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "1945:13:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3485,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1977:4:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "1969:12:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1969:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1934:54:20"
            },
            "returnParameters": {
              "id": 3489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3522,
                  "src": "2010:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2010:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2009:9:20"
            },
            "scope": 3523,
            "src": "1915:584:20",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3524,
        "src": "609:1893:20",
        "usedErrors": []
      }
    ],
    "src": "33:2471:20"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2023-03-25T10:25:01.712Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createAccount(address,uint256)": {
        "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
      },
      "getAddress(address,uint256)": {
        "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
      }
    },
    "notice": "A sample factory contract for SimpleAccount A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.",
    "version": 1
  }
}