{
  "contractName": "IEntryPoint",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "preOpGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "paid",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "validAfter",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "validBefore",
          "type": "uint64"
        }
      ],
      "name": "ExecutionResult",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "opIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "FailedOp",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SenderAddressResult",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "name": "SignatureValidationFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "preOpGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "prefund",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sigFailed",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "validAfter",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "validUntil",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "paymasterContext",
              "type": "bytes"
            }
          ],
          "internalType": "struct IEntryPoint.ReturnInfo",
          "name": "returnInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "senderInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "factoryInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "paymasterInfo",
          "type": "tuple"
        }
      ],
      "name": "ValidationResult",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "preOpGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "prefund",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "sigFailed",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "validAfter",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "validUntil",
              "type": "uint64"
            },
            {
              "internalType": "bytes",
              "name": "paymasterContext",
              "type": "bytes"
            }
          ],
          "internalType": "struct IEntryPoint.ReturnInfo",
          "name": "returnInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "senderInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "factoryInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "stake",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unstakeDelaySec",
              "type": "uint256"
            }
          ],
          "internalType": "struct IStakeManager.StakeInfo",
          "name": "paymasterInfo",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "actualAggregator",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "stake",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "unstakeDelaySec",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IStakeManager.StakeInfo",
              "name": "stakeInfo",
              "type": "tuple"
            }
          ],
          "internalType": "struct IEntryPoint.AggregatorStakeInfo",
          "name": "aggregatorInfo",
          "type": "tuple"
        }
      ],
      "name": "ValidationResultWithAggregation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        }
      ],
      "name": "AccountDeployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalDeposit",
          "type": "uint256"
        }
      ],
      "name": "Deposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "name": "SignatureAggregatorChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalStaked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawTime",
          "type": "uint256"
        }
      ],
      "name": "StakeLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawTime",
          "type": "uint256"
        }
      ],
      "name": "StakeUnlocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "StakeWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "paymaster",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualGasCost",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "actualGasUsed",
          "type": "uint256"
        }
      ],
      "name": "UserOperationEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "userOpHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "revertReason",
          "type": "bytes"
        }
      ],
      "name": "UserOperationRevertReason",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_unstakeDelaySec",
          "type": "uint32"
        }
      ],
      "name": "addStake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getDepositInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint112",
              "name": "deposit",
              "type": "uint112"
            },
            {
              "internalType": "bool",
              "name": "staked",
              "type": "bool"
            },
            {
              "internalType": "uint112",
              "name": "stake",
              "type": "uint112"
            },
            {
              "internalType": "uint32",
              "name": "unstakeDelaySec",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "withdrawTime",
              "type": "uint64"
            }
          ],
          "internalType": "struct IStakeManager.DepositInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        }
      ],
      "name": "withdrawStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "withdrawAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation[]",
          "name": "ops",
          "type": "tuple[]"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "handleOps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "initCode",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "callGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "verificationGasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "preVerificationGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPriorityFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "paymasterAndData",
                  "type": "bytes"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UserOperation[]",
              "name": "userOps",
              "type": "tuple[]"
            },
            {
              "internalType": "contract IAggregator",
              "name": "aggregator",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct IEntryPoint.UserOpsPerAggregator[]",
          "name": "opsPerAggregator",
          "type": "tuple[]"
        },
        {
          "internalType": "address payable",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "handleAggregatedOps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        }
      ],
      "name": "getUserOpHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        }
      ],
      "name": "simulateValidation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "initCode",
          "type": "bytes"
        }
      ],
      "name": "getSenderAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "initCode",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "callGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "verificationGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "preVerificationGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxPriorityFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "paymasterAndData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "op",
          "type": "tuple"
        }
      ],
      "name": "simulateHandleOp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paid\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"validAfter\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"validBefore\",\"type\":\"uint64\"}],\"name\":\"ExecutionResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"opIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"FailedOp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SenderAddressResult\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureValidationFailed\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"validAfter\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResult\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"preOpGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prefund\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sigFailed\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"validAfter\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"validUntil\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"paymasterContext\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.ReturnInfo\",\"name\":\"returnInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"senderInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"factoryInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"paymasterInfo\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"actualAggregator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeDelaySec\",\"type\":\"uint256\"}],\"internalType\":\"struct IStakeManager.StakeInfo\",\"name\":\"stakeInfo\",\"type\":\"tuple\"}],\"internalType\":\"struct IEntryPoint.AggregatorStakeInfo\",\"name\":\"aggregatorInfo\",\"type\":\"tuple\"}],\"name\":\"ValidationResultWithAggregation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"}],\"name\":\"AccountDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"SignatureAggregatorChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawTime\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"paymaster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualGasUsed\",\"type\":\"uint256\"}],\"name\":\"UserOperationEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"revertReason\",\"type\":\"bytes\"}],\"name\":\"UserOperationRevertReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getDepositInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint112\",\"name\":\"deposit\",\"type\":\"uint112\"},{\"internalType\":\"bool\",\"name\":\"staked\",\"type\":\"bool\"},{\"internalType\":\"uint112\",\"name\":\"stake\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"withdrawTime\",\"type\":\"uint64\"}],\"internalType\":\"struct IStakeManager.DepositInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"getSenderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"userOps\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IAggregator\",\"name\":\"aggregator\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct IEntryPoint.UserOpsPerAggregator[]\",\"name\":\"opsPerAggregator\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleAggregatedOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation[]\",\"name\":\"ops\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"handleOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"op\",\"type\":\"tuple\"}],\"name\":\"simulateHandleOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"simulateValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"FailedOp(uint256,address,string)\":[{\"params\":{\"opIndex\":\"- index into the array of ops to the failed one (in simulateValidation, this is always zero)\",\"paymaster\":\"- if paymaster.validatePaymasterUserOp fails, this will be the paymaster's address. if validateUserOp failed,       this value will be zero (since it failed before accessing the paymaster)\",\"reason\":\"- revert reason   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of account/paymaster reverts.\"}}],\"ValidationResult((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"params\":{\"factoryInfo\":\"stake information about the factor (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"params\":{\"aggregatorInfo\":\"signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation\",\"factoryInfo\":\"stake information about the factor (if any)\",\"paymasterInfo\":\"stake information about the paymaster (if any)\",\"returnInfo\":\"gas and time-range returned values\",\"senderInfo\":\"stake information about the sender\"}}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"params\":{\"factory\":\"the factory used to deploy this account (in the initCode)\",\"paymaster\":\"the paymaster used by this UserOp\",\"sender\":\"the account that is deployed\",\"userOpHash\":\"the userOp that deployed this account. UserOperationEvent will follow.\"}},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"params\":{\"nonce\":\"the nonce used in the request\",\"revertReason\":\"- the return bytes from the (reverted) call to \\\"callData\\\".\",\"sender\":\"the sender of this request\",\"userOpHash\":\"the request unique identifier.\"}}},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"_unstakeDelaySec\":\"the new lock duration before the deposit can be withdrawn.\"}},\"getSenderAddress(bytes)\":{\"params\":{\"initCode\":\"the constructor code to be passed into the UserOperation.\"}},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"opsPerAggregator\":\"the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\"}},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"params\":{\"beneficiary\":\"the address to receive the fees\",\"ops\":\"the operations to execute\"}},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\",\"params\":{\"userOp\":\"the user operation to validate.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"withdrawAddress\":\"the address to send withdrawn value.\",\"withdrawAmount\":\"the amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"FailedOp(uint256,address,string)\":[{\"notice\":\"a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\"}],\"SenderAddressResult(address)\":[{\"notice\":\"return value of getSenderAddress\"}],\"SignatureValidationFailed(address)\":[{\"notice\":\"error case when a signature aggregator fails to verify the aggregated signature it had created.\"}],\"ValidationResult((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))\":[{\"notice\":\"Successful result from simulateValidation.\"}],\"ValidationResultWithAggregation((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))\":[{\"notice\":\"Successful result from simulateValidation, if the account returns a signature aggregator\"}]},\"events\":{\"AccountDeployed(bytes32,address,address,address)\":{\"notice\":\"account \\\"sender\\\" was deployed.\"},\"SignatureAggregatorChanged(address)\":{\"notice\":\"signature aggregator used by the following UserOperationEvents within this bundle.\"},\"StakeLocked(address,uint256,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"StakeUnlocked(address,uint256)\":{\"notice\":\"Emitted once a stake is scheduled for withdrawal\"},\"UserOperationRevertReason(bytes32,address,uint256,bytes)\":{\"notice\":\"An event emitted if the UserOperation \\\"callData\\\" reverted with non-zero length\"}},\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"add to the account's stake - amount and delay any pending unstake is first cancelled.\"},\"balanceOf(address)\":{\"notice\":\"return the deposit (for gas payment) of the account\"},\"depositTo(address)\":{\"notice\":\"add to the deposit of the given account\"},\"getSenderAddress(bytes)\":{\"notice\":\"Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error\"},\"getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\"},\"handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation with Aggregators\"},\"handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)\":{\"notice\":\"Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an \\\"actualAggregator\\\" when performing simulateValidation), then handleAggregatedOps() must be used instead.\"},\"simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \\\"ExecutionResult\\\". it performs full validation of the UserOperation, but ignores signature error. Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events.\"},\"simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\"},\"unlockStake()\":{\"notice\":\"attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay.\"},\"withdrawStake(address)\":{\"notice\":\"withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass\"},\"withdrawTo(address,uint256)\":{\"notice\":\"withdraw from the deposit.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Interfaces/IEntryPoint.sol\":\"IEntryPoint\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Interfaces/IAggregator.sol\":{\"keccak256\":\"0x9a62a851850c5ba02ccc58d25bdf80f0e7f39783b72203e051dec15f43d63f4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd60f4decb791a5c1ba06ab8e95c0c41f79c3aa7ab516553b634f948881121e\",\"dweb:/ipfs/QmZBe1M6MZBsj7a9VxGcAyFdnE2cBFxz7QsZ57VabgThqA\"]},\"project:/contracts/Interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x0ab4bdd0b15324f51e12785ceae17b50852550ae75a36be5d9691ed8a0922459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eeb604f3a7b0c1fe8ba2ac27bc3b2b6d4cf6d934e432d8d7190c98de9cac94c\",\"dweb:/ipfs/Qmd8pPDkpyQTSvwpkD6hsNKGB5Ls6jvYd5cYJ3sY1SM7a9\"]},\"project:/contracts/Interfaces/IStakeManager.sol\":{\"keccak256\":\"0x7956fc70ad9af87ca5693028c35bcf28aff878b5fe8e86c8afa4aaa03ab5b05f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd4c1ddccceba2ad1a889956bad31603a824701383a111ad922bda2fefacdf79\",\"dweb:/ipfs/QmegkzUYuyLfhJix74X1xTRG5fUibfFTyjCBzqQn9WnX4W\"]},\"project:/contracts/UserOperation.sol\":{\"keccak256\":\"0xbfc5fdda9ef76cd21cec251dacfa1c454bbbe18b9cb12a3018ceb4e94b415740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34b04318e38b435f757bd567b76056fe375a78b0026f43cf8df3c5d43f6edcf\",\"dweb:/ipfs/QmVREocMq3K1aKEwA9XAV47surTdRAVv6sVWMpxaoRjgSy\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\r\n ** Account-Abstraction (EIP-4337) singleton EntryPoint implementation.\r\n ** Only one instance required on each chain.\r\n **/\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/* solhint-disable avoid-low-level-calls */\r\n/* solhint-disable no-inline-assembly */\r\n/* solhint-disable reason-string */\r\n\r\nimport \"../UserOperation.sol\";\r\nimport \"./IStakeManager.sol\";\r\nimport \"./IAggregator.sol\";\r\n\r\ninterface IEntryPoint is IStakeManager {\r\n    /***\r\n     * An event emitted after each successful request\r\n     * @param userOpHash - unique identifier for the request (hash its entire content, except signature).\r\n     * @param sender - the account that generates this request.\r\n     * @param paymaster - if non-null, the paymaster that pays for this request.\r\n     * @param nonce - the nonce value from the request\r\n     * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation\r\n     * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution)\r\n     * @param success - true if the sender transaction succeeded, false if reverted.\r\n     */\r\n    event UserOperationEvent(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address indexed paymaster,\r\n        uint256 nonce,\r\n        bool success,\r\n        uint256 actualGasCost,\r\n        uint256 actualGasUsed\r\n    );\r\n\r\n    /**\r\n     * account \"sender\" was deployed.\r\n     * @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\r\n     * @param sender the account that is deployed\r\n     * @param factory the factory used to deploy this account (in the initCode)\r\n     * @param paymaster the paymaster used by this UserOp\r\n     */\r\n    event AccountDeployed(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        address factory,\r\n        address paymaster\r\n    );\r\n\r\n    /**\r\n     * An event emitted if the UserOperation \"callData\" reverted with non-zero length\r\n     * @param userOpHash the request unique identifier.\r\n     * @param sender the sender of this request\r\n     * @param nonce the nonce used in the request\r\n     * @param revertReason - the return bytes from the (reverted) call to \"callData\".\r\n     */\r\n    event UserOperationRevertReason(\r\n        bytes32 indexed userOpHash,\r\n        address indexed sender,\r\n        uint256 nonce,\r\n        bytes revertReason\r\n    );\r\n\r\n    /**\r\n     * signature aggregator used by the following UserOperationEvents within this bundle.\r\n     */\r\n    event SignatureAggregatorChanged(address aggregator);\r\n\r\n    /**\r\n     * a custom revert error of handleOps, to identify the offending op.\r\n     *  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\r\n     *  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\r\n     *  @param paymaster - if paymaster.validatePaymasterUserOp fails, this will be the paymaster's address. if validateUserOp failed,\r\n     *       this value will be zero (since it failed before accessing the paymaster)\r\n     *  @param reason - revert reason\r\n     *   Should be caught in off-chain handleOps simulation and not happen on-chain.\r\n     *   Useful for mitigating DoS attempts against batchers or for troubleshooting of account/paymaster reverts.\r\n     */\r\n    error FailedOp(uint256 opIndex, address paymaster, string reason);\r\n\r\n    /**\r\n     * error case when a signature aggregator fails to verify the aggregated signature it had created.\r\n     */\r\n    error SignatureValidationFailed(address aggregator);\r\n\r\n    //UserOps handled, per aggregator\r\n    struct UserOpsPerAggregator {\r\n        UserOperation[] userOps;\r\n        // aggregator address\r\n        IAggregator aggregator;\r\n        // aggregated signature\r\n        bytes signature;\r\n    }\r\n\r\n    /**\r\n     * Execute a batch of UserOperation.\r\n     * no signature aggregator is used.\r\n     * if any account requires an aggregator (that is, it returned an \"actualAggregator\" when\r\n     * performing simulateValidation), then handleAggregatedOps() must be used instead.\r\n     * @param ops the operations to execute\r\n     * @param beneficiary the address to receive the fees\r\n     */\r\n    function handleOps(\r\n        UserOperation[] calldata ops,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * Execute a batch of UserOperation with Aggregators\r\n     * @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\r\n     * @param beneficiary the address to receive the fees\r\n     */\r\n    function handleAggregatedOps(\r\n        UserOpsPerAggregator[] calldata opsPerAggregator,\r\n        address payable beneficiary\r\n    ) external;\r\n\r\n    /**\r\n     * generate a request Id - unique identifier for this request.\r\n     * the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid.\r\n     */\r\n    function getUserOpHash(UserOperation calldata userOp)\r\n        external\r\n        view\r\n        returns (bytes32);\r\n\r\n    /**\r\n     * Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\r\n     * @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\r\n     * @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\r\n     * @param userOp the user operation to validate.\r\n     */\r\n    function simulateValidation(UserOperation calldata userOp) external;\r\n\r\n    /**\r\n     * Successful result from simulateValidation.\r\n     * @param returnInfo gas and time-range returned values\r\n     * @param senderInfo stake information about the sender\r\n     * @param factoryInfo stake information about the factor (if any)\r\n     * @param paymasterInfo stake information about the paymaster (if any)\r\n     */\r\n    error ValidationResult(\r\n        ReturnInfo returnInfo,\r\n        StakeInfo senderInfo,\r\n        StakeInfo factoryInfo,\r\n        StakeInfo paymasterInfo\r\n    );\r\n\r\n    /**\r\n     * Successful result from simulateValidation, if the account returns a signature aggregator\r\n     * @param returnInfo gas and time-range returned values\r\n     * @param senderInfo stake information about the sender\r\n     * @param factoryInfo stake information about the factor (if any)\r\n     * @param paymasterInfo stake information about the paymaster (if any)\r\n     * @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\r\n     *      bundler MUST use it to verify the signature, or reject the UserOperation\r\n     */\r\n    error ValidationResultWithAggregation(\r\n        ReturnInfo returnInfo,\r\n        StakeInfo senderInfo,\r\n        StakeInfo factoryInfo,\r\n        StakeInfo paymasterInfo,\r\n        AggregatorStakeInfo aggregatorInfo\r\n    );\r\n\r\n    /**\r\n     * gas and return values during simulation\r\n     * @param preOpGas the gas used for validation (including preValidationGas)\r\n     * @param prefund the required prefund for this operation\r\n     * @param sigFailed validateUserOp's (or paymaster's) signature check failed\r\n     * @param validAfter - first timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param validUntil - last timestamp this UserOp is valid (merging account and paymaster time-range)\r\n     * @param paymasterContext returned by validatePaymasterUserOp (to be passed into postOp)\r\n     */\r\n    struct ReturnInfo {\r\n        uint256 preOpGas;\r\n        uint256 prefund;\r\n        bool sigFailed;\r\n        uint64 validAfter;\r\n        uint64 validUntil;\r\n        bytes paymasterContext;\r\n    }\r\n\r\n    /**\r\n     * returned aggregated signature info.\r\n     * the aggregator returned by the account, and its current stake.\r\n     */\r\n    struct AggregatorStakeInfo {\r\n        address actualAggregator;\r\n        StakeInfo stakeInfo;\r\n    }\r\n\r\n    /**\r\n     * Get counterfactual sender address.\r\n     *  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\r\n     * this method always revert, and returns the address in SenderAddressResult error\r\n     * @param initCode the constructor code to be passed into the UserOperation.\r\n     */\r\n    function getSenderAddress(bytes memory initCode) external;\r\n\r\n    /**\r\n     * return value of getSenderAddress\r\n     */\r\n    error SenderAddressResult(address sender);\r\n\r\n    /**\r\n     * simulate full execution of a UserOperation (including both validation and target execution)\r\n     * this method will always revert with \"ExecutionResult\".\r\n     * it performs full validation of the UserOperation, but ignores signature error.\r\n     * Note that in order to collect the the success/failure of the target call, it must be executed\r\n     * with trace enabled to track the emitted events.\r\n     */\r\n    function simulateHandleOp(UserOperation calldata op) external;\r\n\r\n    error ExecutionResult(\r\n        uint256 preOpGas,\r\n        uint256 paid,\r\n        uint64 validAfter,\r\n        uint64 validBefore\r\n    );\r\n}\r\n",
  "sourcePath": "C:\\Users\\Ghadi\\Desktop\\Portfolio\\Smart-Contract-Wallet\\account-abstraction-contracts\\contracts\\Interfaces\\IEntryPoint.sol",
  "ast": {
    "absolutePath": "project:/contracts/Interfaces/IEntryPoint.sol",
    "exportedSymbols": {
      "IAggregator": [
        3308
      ],
      "IEntryPoint": [
        3499
      ],
      "IStakeManager": [
        3603
      ],
      "UserOperation": [
        3661
      ],
      "UserOperationLib": [
        3765
      ]
    },
    "id": 3500,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3310,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "164:23:17"
      },
      {
        "absolutePath": "project:/contracts/UserOperation.sol",
        "file": "../UserOperation.sol",
        "id": 3311,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3500,
        "sourceUnit": 3766,
        "src": "317:30:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Interfaces/IStakeManager.sol",
        "file": "./IStakeManager.sol",
        "id": 3312,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3500,
        "sourceUnit": 3604,
        "src": "349:29:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Interfaces/IAggregator.sol",
        "file": "./IAggregator.sol",
        "id": 3313,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3500,
        "sourceUnit": 3309,
        "src": "380:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3314,
              "name": "IStakeManager",
              "nameLocations": [
                "436:13:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3603,
              "src": "436:13:17"
            },
            "id": 3315,
            "nodeType": "InheritanceSpecifier",
            "src": "436:13:17"
          }
        ],
        "canonicalName": "IEntryPoint",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3499,
        "linearizedBaseContracts": [
          3499,
          3603
        ],
        "name": "IEntryPoint",
        "nameLocation": "421:11:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f",
            "id": 3331,
            "name": "UserOperationEvent",
            "nameLocation": "1164:18:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3317,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1209:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1193:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3316,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3319,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1246:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1230:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3321,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "1279:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1263:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3323,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1307:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1299:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3325,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1328:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1323:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3324,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3327,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "1354:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1346:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3329,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualGasUsed",
                  "nameLocation": "1386:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1378:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:224:17"
            },
            "src": "1158:249:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3332,
              "nodeType": "StructuredDocumentation",
              "src": "1415:339:17",
              "text": " account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"
            },
            "eventSelector": "d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d",
            "id": 3342,
            "name": "AccountDeployed",
            "nameLocation": "1766:15:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3334,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1808:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1792:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3336,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1845:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1829:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3338,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1870:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1862:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "1896:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1888:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1781:131:17"
            },
            "src": "1760:153:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3343,
              "nodeType": "StructuredDocumentation",
              "src": "1921:343:17",
              "text": " An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."
            },
            "eventSelector": "1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201",
            "id": 3353,
            "name": "UserOperationRevertReason",
            "nameLocation": "2276:25:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3345,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "2328:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2312:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3344,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3347,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2365:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2349:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3349,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2390:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2382:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3351,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "revertReason",
                  "nameLocation": "2412:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2406:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3350,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2301:130:17"
            },
            "src": "2270:162:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3354,
              "nodeType": "StructuredDocumentation",
              "src": "2440:103:17",
              "text": " signature aggregator used by the following UserOperationEvents within this bundle."
            },
            "eventSelector": "575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d",
            "id": 3358,
            "name": "SignatureAggregatorChanged",
            "nameLocation": "2555:26:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "2590:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3358,
                  "src": "2582:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2581:20:17"
            },
            "src": "2549:53:17"
          },
          {
            "documentation": {
              "id": 3359,
              "nodeType": "StructuredDocumentation",
              "src": "2610:779:17",
              "text": " a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param paymaster - if paymaster.validatePaymasterUserOp fails, this will be the paymaster's address. if validateUserOp failed,\n       this value will be zero (since it failed before accessing the paymaster)\n  @param reason - revert reason\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of account/paymaster reverts."
            },
            "errorSelector": "00fa072b",
            "id": 3367,
            "name": "FailedOp",
            "nameLocation": "3401:8:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3361,
                  "mutability": "mutable",
                  "name": "opIndex",
                  "nameLocation": "3418:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "3410:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3363,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "3435:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "3427:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3365,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "3453:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "3446:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3446:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3409:51:17"
            },
            "src": "3395:66:17"
          },
          {
            "documentation": {
              "id": 3368,
              "nodeType": "StructuredDocumentation",
              "src": "3469:116:17",
              "text": " error case when a signature aggregator fails to verify the aggregated signature it had created."
            },
            "errorSelector": "86a9f750",
            "id": 3372,
            "name": "SignatureValidationFailed",
            "nameLocation": "3597:25:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3370,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "3631:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3372,
                  "src": "3623:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3623:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3622:20:17"
            },
            "src": "3591:52:17"
          },
          {
            "canonicalName": "IEntryPoint.UserOpsPerAggregator",
            "id": 3382,
            "members": [
              {
                "constant": false,
                "id": 3376,
                "mutability": "mutable",
                "name": "userOps",
                "nameLocation": "3745:7:17",
                "nodeType": "VariableDeclaration",
                "scope": 3382,
                "src": "3729:23:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_storage_$dyn_storage_ptr",
                  "typeString": "struct UserOperation[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 3374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3373,
                      "name": "UserOperation",
                      "nameLocations": [
                        "3729:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "3729:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "3729:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "id": 3375,
                  "nodeType": "ArrayTypeName",
                  "src": "3729:15:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_storage_$dyn_storage_ptr",
                    "typeString": "struct UserOperation[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3379,
                "mutability": "mutable",
                "name": "aggregator",
                "nameLocation": "3806:10:17",
                "nodeType": "VariableDeclaration",
                "scope": 3382,
                "src": "3794:22:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IAggregator_$3308",
                  "typeString": "contract IAggregator"
                },
                "typeName": {
                  "id": 3378,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3377,
                    "name": "IAggregator",
                    "nameLocations": [
                      "3794:11:17"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3308,
                    "src": "3794:11:17"
                  },
                  "referencedDeclaration": 3308,
                  "src": "3794:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAggregator_$3308",
                    "typeString": "contract IAggregator"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3381,
                "mutability": "mutable",
                "name": "signature",
                "nameLocation": "3866:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 3382,
                "src": "3860:15:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 3380,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "3860:5:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserOpsPerAggregator",
            "nameLocation": "3697:20:17",
            "nodeType": "StructDefinition",
            "scope": 3499,
            "src": "3690:193:17",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 3383,
              "nodeType": "StructuredDocumentation",
              "src": "3891:383:17",
              "text": " Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an \"actualAggregator\" when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"
            },
            "functionSelector": "1fad948c",
            "id": 3392,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "handleOps",
            "nameLocation": "4289:9:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3387,
                  "mutability": "mutable",
                  "name": "ops",
                  "nameLocation": "4334:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3392,
                  "src": "4309:28:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct UserOperation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3385,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3384,
                        "name": "UserOperation",
                        "nameLocations": [
                          "4309:13:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3661,
                        "src": "4309:13:17"
                      },
                      "referencedDeclaration": 3661,
                      "src": "4309:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                        "typeString": "struct UserOperation"
                      }
                    },
                    "id": 3386,
                    "nodeType": "ArrayTypeName",
                    "src": "4309:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_storage_$dyn_storage_ptr",
                      "typeString": "struct UserOperation[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3389,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "4364:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3392,
                  "src": "4348:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4348:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4298:84:17"
            },
            "returnParameters": {
              "id": 3391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4391:0:17"
            },
            "scope": 3499,
            "src": "4280:112:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3393,
              "nodeType": "StructuredDocumentation",
              "src": "4400:253:17",
              "text": " Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"
            },
            "functionSelector": "4b1d7cf5",
            "id": 3402,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "handleAggregatedOps",
            "nameLocation": "4668:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3397,
                  "mutability": "mutable",
                  "name": "opsPerAggregator",
                  "nameLocation": "4730:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3402,
                  "src": "4698:48:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$3382_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3395,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3394,
                        "name": "UserOpsPerAggregator",
                        "nameLocations": [
                          "4698:20:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3382,
                        "src": "4698:20:17"
                      },
                      "referencedDeclaration": 3382,
                      "src": "4698:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOpsPerAggregator_$3382_storage_ptr",
                        "typeString": "struct IEntryPoint.UserOpsPerAggregator"
                      }
                    },
                    "id": 3396,
                    "nodeType": "ArrayTypeName",
                    "src": "4698:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$3382_storage_$dyn_storage_ptr",
                      "typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3399,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "4773:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3402,
                  "src": "4757:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4687:104:17"
            },
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4800:0:17"
            },
            "scope": 3499,
            "src": "4659:142:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3403,
              "nodeType": "StructuredDocumentation",
              "src": "4809:200:17",
              "text": " generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
            },
            "functionSelector": "a6193531",
            "id": 3411,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserOpHash",
            "nameLocation": "5024:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3406,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "5061:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "5038:29:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3661_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3405,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3404,
                      "name": "UserOperation",
                      "nameLocations": [
                        "5038:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "5038:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "5038:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5037:31:17"
            },
            "returnParameters": {
              "id": 3410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "5119:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3408,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5119:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5118:9:17"
            },
            "scope": 3499,
            "src": "5015:113:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3412,
              "nodeType": "StructuredDocumentation",
              "src": "5136:403:17",
              "text": " Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."
            },
            "functionSelector": "ee219423",
            "id": 3418,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateValidation",
            "nameLocation": "5554:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3415,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "5596:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3418,
                  "src": "5573:29:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3661_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3413,
                      "name": "UserOperation",
                      "nameLocations": [
                        "5573:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "5573:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "5573:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5572:31:17"
            },
            "returnParameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5612:0:17"
            },
            "scope": 3499,
            "src": "5545:68:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3419,
              "nodeType": "StructuredDocumentation",
              "src": "5621:332:17",
              "text": " Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factor (if any)\n @param paymasterInfo stake information about the paymaster (if any)"
            },
            "errorSelector": "f04297e9",
            "id": 3433,
            "name": "ValidationResult",
            "nameLocation": "5965:16:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "returnInfo",
                  "nameLocation": "6003:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "5992:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReturnInfo_$3464_memory_ptr",
                    "typeString": "struct IEntryPoint.ReturnInfo"
                  },
                  "typeName": {
                    "id": 3421,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3420,
                      "name": "ReturnInfo",
                      "nameLocations": [
                        "5992:10:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3464,
                      "src": "5992:10:17"
                    },
                    "referencedDeclaration": 3464,
                    "src": "5992:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReturnInfo_$3464_storage_ptr",
                      "typeString": "struct IEntryPoint.ReturnInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "mutability": "mutable",
                  "name": "senderInfo",
                  "nameLocation": "6034:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "6024:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3423,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6024:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6024:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6024:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3428,
                  "mutability": "mutable",
                  "name": "factoryInfo",
                  "nameLocation": "6065:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "6055:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3426,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6055:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6055:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6055:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3431,
                  "mutability": "mutable",
                  "name": "paymasterInfo",
                  "nameLocation": "6097:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "6087:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3430,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3429,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6087:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6087:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6087:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5981:136:17"
            },
            "src": "5959:159:17"
          },
          {
            "documentation": {
              "id": 3434,
              "nodeType": "StructuredDocumentation",
              "src": "6126:568:17",
              "text": " Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factor (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"
            },
            "errorSelector": "356877a3",
            "id": 3451,
            "name": "ValidationResultWithAggregation",
            "nameLocation": "6706:31:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "returnInfo",
                  "nameLocation": "6759:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6748:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReturnInfo_$3464_memory_ptr",
                    "typeString": "struct IEntryPoint.ReturnInfo"
                  },
                  "typeName": {
                    "id": 3436,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3435,
                      "name": "ReturnInfo",
                      "nameLocations": [
                        "6748:10:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3464,
                      "src": "6748:10:17"
                    },
                    "referencedDeclaration": 3464,
                    "src": "6748:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReturnInfo_$3464_storage_ptr",
                      "typeString": "struct IEntryPoint.ReturnInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3440,
                  "mutability": "mutable",
                  "name": "senderInfo",
                  "nameLocation": "6790:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6780:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3439,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3438,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6780:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6780:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6780:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3443,
                  "mutability": "mutable",
                  "name": "factoryInfo",
                  "nameLocation": "6821:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6811:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3442,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3441,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6811:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6811:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6811:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3446,
                  "mutability": "mutable",
                  "name": "paymasterInfo",
                  "nameLocation": "6853:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6843:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3445,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3444,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6843:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6843:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6843:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3449,
                  "mutability": "mutable",
                  "name": "aggregatorInfo",
                  "nameLocation": "6897:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6877:34:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AggregatorStakeInfo_$3470_memory_ptr",
                    "typeString": "struct IEntryPoint.AggregatorStakeInfo"
                  },
                  "typeName": {
                    "id": 3448,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3447,
                      "name": "AggregatorStakeInfo",
                      "nameLocations": [
                        "6877:19:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3470,
                      "src": "6877:19:17"
                    },
                    "referencedDeclaration": 3470,
                    "src": "6877:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AggregatorStakeInfo_$3470_storage_ptr",
                      "typeString": "struct IEntryPoint.AggregatorStakeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6737:181:17"
            },
            "src": "6700:219:17"
          },
          {
            "canonicalName": "IEntryPoint.ReturnInfo",
            "id": 3464,
            "members": [
              {
                "constant": false,
                "id": 3453,
                "mutability": "mutable",
                "name": "preOpGas",
                "nameLocation": "7566:8:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7558:16:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3452,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7558:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3455,
                "mutability": "mutable",
                "name": "prefund",
                "nameLocation": "7593:7:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7585:15:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3454,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7585:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3457,
                "mutability": "mutable",
                "name": "sigFailed",
                "nameLocation": "7616:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7611:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3456,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7611:4:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3459,
                "mutability": "mutable",
                "name": "validAfter",
                "nameLocation": "7643:10:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7636:17:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 3458,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "7636:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3461,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "7671:10:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7664:17:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 3460,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "7664:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3463,
                "mutability": "mutable",
                "name": "paymasterContext",
                "nameLocation": "7698:16:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7692:22:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 3462,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "7692:5:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ReturnInfo",
            "nameLocation": "7536:10:17",
            "nodeType": "StructDefinition",
            "scope": 3499,
            "src": "7529:193:17",
            "visibility": "public"
          },
          {
            "canonicalName": "IEntryPoint.AggregatorStakeInfo",
            "id": 3470,
            "members": [
              {
                "constant": false,
                "id": 3466,
                "mutability": "mutable",
                "name": "actualAggregator",
                "nameLocation": "7909:16:17",
                "nodeType": "VariableDeclaration",
                "scope": 3470,
                "src": "7901:24:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3465,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7901:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3469,
                "mutability": "mutable",
                "name": "stakeInfo",
                "nameLocation": "7946:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 3470,
                "src": "7936:19:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                  "typeString": "struct IStakeManager.StakeInfo"
                },
                "typeName": {
                  "id": 3468,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3467,
                    "name": "StakeInfo",
                    "nameLocations": [
                      "7936:9:17"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3556,
                    "src": "7936:9:17"
                  },
                  "referencedDeclaration": 3556,
                  "src": "7936:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AggregatorStakeInfo",
            "nameLocation": "7870:19:17",
            "nodeType": "StructDefinition",
            "scope": 3499,
            "src": "7863:100:17",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 3471,
              "nodeType": "StructuredDocumentation",
              "src": "7971:342:17",
              "text": " Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."
            },
            "functionSelector": "9b249f69",
            "id": 3476,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderAddress",
            "nameLocation": "8328:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3473,
                  "mutability": "mutable",
                  "name": "initCode",
                  "nameLocation": "8358:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3476,
                  "src": "8345:21:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3472,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8345:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8344:23:17"
            },
            "returnParameters": {
              "id": 3475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8376:0:17"
            },
            "scope": 3499,
            "src": "8319:58:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3477,
              "nodeType": "StructuredDocumentation",
              "src": "8385:53:17",
              "text": " return value of getSenderAddress"
            },
            "errorSelector": "6ca7b806",
            "id": 3481,
            "name": "SenderAddressResult",
            "nameLocation": "8450:19:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3479,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8478:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3481,
                  "src": "8470:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8470:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8469:16:17"
            },
            "src": "8444:42:17"
          },
          {
            "documentation": {
              "id": 3482,
              "nodeType": "StructuredDocumentation",
              "src": "8494:420:17",
              "text": " simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events."
            },
            "functionSelector": "c2077116",
            "id": 3488,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateHandleOp",
            "nameLocation": "8929:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3485,
                  "mutability": "mutable",
                  "name": "op",
                  "nameLocation": "8969:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3488,
                  "src": "8946:25:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3661_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3484,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3483,
                      "name": "UserOperation",
                      "nameLocations": [
                        "8946:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "8946:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "8946:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8945:27:17"
            },
            "returnParameters": {
              "id": 3487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8981:0:17"
            },
            "scope": 3499,
            "src": "8920:62:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "errorSelector": "cd8ac246",
            "id": 3498,
            "name": "ExecutionResult",
            "nameLocation": "8996:15:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3490,
                  "mutability": "mutable",
                  "name": "preOpGas",
                  "nameLocation": "9030:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9022:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9022:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3492,
                  "mutability": "mutable",
                  "name": "paid",
                  "nameLocation": "9057:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9049:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9049:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3494,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "9079:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9072:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3493,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3496,
                  "mutability": "mutable",
                  "name": "validBefore",
                  "nameLocation": "9107:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9100:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3495,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9100:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9011:114:17"
            },
            "src": "8990:136:17"
          }
        ],
        "scope": 3500,
        "src": "411:8718:17",
        "usedErrors": [
          3367,
          3372,
          3433,
          3451,
          3481,
          3498
        ]
      }
    ],
    "src": "164:8967:17"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Interfaces/IEntryPoint.sol",
    "exportedSymbols": {
      "IAggregator": [
        3308
      ],
      "IEntryPoint": [
        3499
      ],
      "IStakeManager": [
        3603
      ],
      "UserOperation": [
        3661
      ],
      "UserOperationLib": [
        3765
      ]
    },
    "id": 3500,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3310,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "164:23:17"
      },
      {
        "absolutePath": "project:/contracts/UserOperation.sol",
        "file": "../UserOperation.sol",
        "id": 3311,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3500,
        "sourceUnit": 3766,
        "src": "317:30:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Interfaces/IStakeManager.sol",
        "file": "./IStakeManager.sol",
        "id": 3312,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3500,
        "sourceUnit": 3604,
        "src": "349:29:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Interfaces/IAggregator.sol",
        "file": "./IAggregator.sol",
        "id": 3313,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3500,
        "sourceUnit": 3309,
        "src": "380:27:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3314,
              "name": "IStakeManager",
              "nameLocations": [
                "436:13:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3603,
              "src": "436:13:17"
            },
            "id": 3315,
            "nodeType": "InheritanceSpecifier",
            "src": "436:13:17"
          }
        ],
        "canonicalName": "IEntryPoint",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 3499,
        "linearizedBaseContracts": [
          3499,
          3603
        ],
        "name": "IEntryPoint",
        "nameLocation": "421:11:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f",
            "id": 3331,
            "name": "UserOperationEvent",
            "nameLocation": "1164:18:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3317,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1209:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1193:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3316,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3319,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1246:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1230:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3321,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "1279:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1263:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1263:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3323,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "1307:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1299:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3325,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "1328:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1323:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3324,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3327,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualGasCost",
                  "nameLocation": "1354:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1346:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1346:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3329,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "actualGasUsed",
                  "nameLocation": "1386:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3331,
                  "src": "1378:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1378:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1182:224:17"
            },
            "src": "1158:249:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3332,
              "nodeType": "StructuredDocumentation",
              "src": "1415:339:17",
              "text": " account \"sender\" was deployed.\n @param userOpHash the userOp that deployed this account. UserOperationEvent will follow.\n @param sender the account that is deployed\n @param factory the factory used to deploy this account (in the initCode)\n @param paymaster the paymaster used by this UserOp"
            },
            "eventSelector": "d51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d",
            "id": 3342,
            "name": "AccountDeployed",
            "nameLocation": "1766:15:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3334,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "1808:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1792:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3336,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1845:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1829:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1829:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3338,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "1870:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1862:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "1896:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3342,
                  "src": "1888:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3339,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1888:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1781:131:17"
            },
            "src": "1760:153:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3343,
              "nodeType": "StructuredDocumentation",
              "src": "1921:343:17",
              "text": " An event emitted if the UserOperation \"callData\" reverted with non-zero length\n @param userOpHash the request unique identifier.\n @param sender the sender of this request\n @param nonce the nonce used in the request\n @param revertReason - the return bytes from the (reverted) call to \"callData\"."
            },
            "eventSelector": "1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201",
            "id": 3353,
            "name": "UserOperationRevertReason",
            "nameLocation": "2276:25:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3345,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "userOpHash",
                  "nameLocation": "2328:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2312:26:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3344,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3347,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2365:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2349:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3349,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2390:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2382:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3351,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "revertReason",
                  "nameLocation": "2412:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3353,
                  "src": "2406:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3350,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2301:130:17"
            },
            "src": "2270:162:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 3354,
              "nodeType": "StructuredDocumentation",
              "src": "2440:103:17",
              "text": " signature aggregator used by the following UserOperationEvents within this bundle."
            },
            "eventSelector": "575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d",
            "id": 3358,
            "name": "SignatureAggregatorChanged",
            "nameLocation": "2555:26:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "2590:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3358,
                  "src": "2582:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2581:20:17"
            },
            "src": "2549:53:17"
          },
          {
            "documentation": {
              "id": 3359,
              "nodeType": "StructuredDocumentation",
              "src": "2610:779:17",
              "text": " a custom revert error of handleOps, to identify the offending op.\n  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it.\n  @param opIndex - index into the array of ops to the failed one (in simulateValidation, this is always zero)\n  @param paymaster - if paymaster.validatePaymasterUserOp fails, this will be the paymaster's address. if validateUserOp failed,\n       this value will be zero (since it failed before accessing the paymaster)\n  @param reason - revert reason\n   Should be caught in off-chain handleOps simulation and not happen on-chain.\n   Useful for mitigating DoS attempts against batchers or for troubleshooting of account/paymaster reverts."
            },
            "errorSelector": "00fa072b",
            "id": 3367,
            "name": "FailedOp",
            "nameLocation": "3401:8:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3361,
                  "mutability": "mutable",
                  "name": "opIndex",
                  "nameLocation": "3418:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "3410:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3410:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3363,
                  "mutability": "mutable",
                  "name": "paymaster",
                  "nameLocation": "3435:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "3427:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3427:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3365,
                  "mutability": "mutable",
                  "name": "reason",
                  "nameLocation": "3453:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3367,
                  "src": "3446:13:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3446:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3409:51:17"
            },
            "src": "3395:66:17"
          },
          {
            "documentation": {
              "id": 3368,
              "nodeType": "StructuredDocumentation",
              "src": "3469:116:17",
              "text": " error case when a signature aggregator fails to verify the aggregated signature it had created."
            },
            "errorSelector": "86a9f750",
            "id": 3372,
            "name": "SignatureValidationFailed",
            "nameLocation": "3597:25:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3370,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "3631:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3372,
                  "src": "3623:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3623:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3622:20:17"
            },
            "src": "3591:52:17"
          },
          {
            "canonicalName": "IEntryPoint.UserOpsPerAggregator",
            "id": 3382,
            "members": [
              {
                "constant": false,
                "id": 3376,
                "mutability": "mutable",
                "name": "userOps",
                "nameLocation": "3745:7:17",
                "nodeType": "VariableDeclaration",
                "scope": 3382,
                "src": "3729:23:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_storage_$dyn_storage_ptr",
                  "typeString": "struct UserOperation[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 3374,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3373,
                      "name": "UserOperation",
                      "nameLocations": [
                        "3729:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "3729:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "3729:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "id": 3375,
                  "nodeType": "ArrayTypeName",
                  "src": "3729:15:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_storage_$dyn_storage_ptr",
                    "typeString": "struct UserOperation[]"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3379,
                "mutability": "mutable",
                "name": "aggregator",
                "nameLocation": "3806:10:17",
                "nodeType": "VariableDeclaration",
                "scope": 3382,
                "src": "3794:22:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IAggregator_$3308",
                  "typeString": "contract IAggregator"
                },
                "typeName": {
                  "id": 3378,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3377,
                    "name": "IAggregator",
                    "nameLocations": [
                      "3794:11:17"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3308,
                    "src": "3794:11:17"
                  },
                  "referencedDeclaration": 3308,
                  "src": "3794:11:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IAggregator_$3308",
                    "typeString": "contract IAggregator"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3381,
                "mutability": "mutable",
                "name": "signature",
                "nameLocation": "3866:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 3382,
                "src": "3860:15:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 3380,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "3860:5:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserOpsPerAggregator",
            "nameLocation": "3697:20:17",
            "nodeType": "StructDefinition",
            "scope": 3499,
            "src": "3690:193:17",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 3383,
              "nodeType": "StructuredDocumentation",
              "src": "3891:383:17",
              "text": " Execute a batch of UserOperation.\n no signature aggregator is used.\n if any account requires an aggregator (that is, it returned an \"actualAggregator\" when\n performing simulateValidation), then handleAggregatedOps() must be used instead.\n @param ops the operations to execute\n @param beneficiary the address to receive the fees"
            },
            "functionSelector": "1fad948c",
            "id": 3392,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "handleOps",
            "nameLocation": "4289:9:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3387,
                  "mutability": "mutable",
                  "name": "ops",
                  "nameLocation": "4334:3:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3392,
                  "src": "4309:28:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct UserOperation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3385,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3384,
                        "name": "UserOperation",
                        "nameLocations": [
                          "4309:13:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3661,
                        "src": "4309:13:17"
                      },
                      "referencedDeclaration": 3661,
                      "src": "4309:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                        "typeString": "struct UserOperation"
                      }
                    },
                    "id": 3386,
                    "nodeType": "ArrayTypeName",
                    "src": "4309:15:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserOperation_$3661_storage_$dyn_storage_ptr",
                      "typeString": "struct UserOperation[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3389,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "4364:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3392,
                  "src": "4348:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4348:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4298:84:17"
            },
            "returnParameters": {
              "id": 3391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4391:0:17"
            },
            "scope": 3499,
            "src": "4280:112:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3393,
              "nodeType": "StructuredDocumentation",
              "src": "4400:253:17",
              "text": " Execute a batch of UserOperation with Aggregators\n @param opsPerAggregator the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)\n @param beneficiary the address to receive the fees"
            },
            "functionSelector": "4b1d7cf5",
            "id": 3402,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "handleAggregatedOps",
            "nameLocation": "4668:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3397,
                  "mutability": "mutable",
                  "name": "opsPerAggregator",
                  "nameLocation": "4730:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3402,
                  "src": "4698:48:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$3382_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3395,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 3394,
                        "name": "UserOpsPerAggregator",
                        "nameLocations": [
                          "4698:20:17"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3382,
                        "src": "4698:20:17"
                      },
                      "referencedDeclaration": 3382,
                      "src": "4698:20:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserOpsPerAggregator_$3382_storage_ptr",
                        "typeString": "struct IEntryPoint.UserOpsPerAggregator"
                      }
                    },
                    "id": 3396,
                    "nodeType": "ArrayTypeName",
                    "src": "4698:22:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_UserOpsPerAggregator_$3382_storage_$dyn_storage_ptr",
                      "typeString": "struct IEntryPoint.UserOpsPerAggregator[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3399,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "4773:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3402,
                  "src": "4757:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4757:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4687:104:17"
            },
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4800:0:17"
            },
            "scope": 3499,
            "src": "4659:142:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3403,
              "nodeType": "StructuredDocumentation",
              "src": "4809:200:17",
              "text": " generate a request Id - unique identifier for this request.\n the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
            },
            "functionSelector": "a6193531",
            "id": 3411,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUserOpHash",
            "nameLocation": "5024:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3406,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "5061:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "5038:29:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3661_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3405,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3404,
                      "name": "UserOperation",
                      "nameLocations": [
                        "5038:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "5038:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "5038:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5037:31:17"
            },
            "returnParameters": {
              "id": 3410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3409,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3411,
                  "src": "5119:7:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3408,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5119:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5118:9:17"
            },
            "scope": 3499,
            "src": "5015:113:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3412,
              "nodeType": "StructuredDocumentation",
              "src": "5136:403:17",
              "text": " Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp.\n @dev this method always revert. Successful result is ValidationResult error. other errors are failures.\n @dev The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.\n @param userOp the user operation to validate."
            },
            "functionSelector": "ee219423",
            "id": 3418,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateValidation",
            "nameLocation": "5554:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3415,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "5596:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3418,
                  "src": "5573:29:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3661_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3414,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3413,
                      "name": "UserOperation",
                      "nameLocations": [
                        "5573:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "5573:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "5573:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5572:31:17"
            },
            "returnParameters": {
              "id": 3417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5612:0:17"
            },
            "scope": 3499,
            "src": "5545:68:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3419,
              "nodeType": "StructuredDocumentation",
              "src": "5621:332:17",
              "text": " Successful result from simulateValidation.\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factor (if any)\n @param paymasterInfo stake information about the paymaster (if any)"
            },
            "errorSelector": "f04297e9",
            "id": 3433,
            "name": "ValidationResult",
            "nameLocation": "5965:16:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "returnInfo",
                  "nameLocation": "6003:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "5992:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReturnInfo_$3464_memory_ptr",
                    "typeString": "struct IEntryPoint.ReturnInfo"
                  },
                  "typeName": {
                    "id": 3421,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3420,
                      "name": "ReturnInfo",
                      "nameLocations": [
                        "5992:10:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3464,
                      "src": "5992:10:17"
                    },
                    "referencedDeclaration": 3464,
                    "src": "5992:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReturnInfo_$3464_storage_ptr",
                      "typeString": "struct IEntryPoint.ReturnInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3425,
                  "mutability": "mutable",
                  "name": "senderInfo",
                  "nameLocation": "6034:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "6024:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3423,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6024:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6024:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6024:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3428,
                  "mutability": "mutable",
                  "name": "factoryInfo",
                  "nameLocation": "6065:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "6055:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3426,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6055:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6055:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6055:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3431,
                  "mutability": "mutable",
                  "name": "paymasterInfo",
                  "nameLocation": "6097:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "6087:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3430,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3429,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6087:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6087:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6087:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5981:136:17"
            },
            "src": "5959:159:17"
          },
          {
            "documentation": {
              "id": 3434,
              "nodeType": "StructuredDocumentation",
              "src": "6126:568:17",
              "text": " Successful result from simulateValidation, if the account returns a signature aggregator\n @param returnInfo gas and time-range returned values\n @param senderInfo stake information about the sender\n @param factoryInfo stake information about the factor (if any)\n @param paymasterInfo stake information about the paymaster (if any)\n @param aggregatorInfo signature aggregation info (if the account requires signature aggregator)\n      bundler MUST use it to verify the signature, or reject the UserOperation"
            },
            "errorSelector": "356877a3",
            "id": 3451,
            "name": "ValidationResultWithAggregation",
            "nameLocation": "6706:31:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3437,
                  "mutability": "mutable",
                  "name": "returnInfo",
                  "nameLocation": "6759:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6748:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReturnInfo_$3464_memory_ptr",
                    "typeString": "struct IEntryPoint.ReturnInfo"
                  },
                  "typeName": {
                    "id": 3436,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3435,
                      "name": "ReturnInfo",
                      "nameLocations": [
                        "6748:10:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3464,
                      "src": "6748:10:17"
                    },
                    "referencedDeclaration": 3464,
                    "src": "6748:10:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReturnInfo_$3464_storage_ptr",
                      "typeString": "struct IEntryPoint.ReturnInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3440,
                  "mutability": "mutable",
                  "name": "senderInfo",
                  "nameLocation": "6790:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6780:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3439,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3438,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6780:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6780:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6780:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3443,
                  "mutability": "mutable",
                  "name": "factoryInfo",
                  "nameLocation": "6821:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6811:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3442,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3441,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6811:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6811:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6811:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3446,
                  "mutability": "mutable",
                  "name": "paymasterInfo",
                  "nameLocation": "6853:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6843:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_memory_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  },
                  "typeName": {
                    "id": 3445,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3444,
                      "name": "StakeInfo",
                      "nameLocations": [
                        "6843:9:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3556,
                      "src": "6843:9:17"
                    },
                    "referencedDeclaration": 3556,
                    "src": "6843:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                      "typeString": "struct IStakeManager.StakeInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3449,
                  "mutability": "mutable",
                  "name": "aggregatorInfo",
                  "nameLocation": "6897:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3451,
                  "src": "6877:34:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AggregatorStakeInfo_$3470_memory_ptr",
                    "typeString": "struct IEntryPoint.AggregatorStakeInfo"
                  },
                  "typeName": {
                    "id": 3448,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3447,
                      "name": "AggregatorStakeInfo",
                      "nameLocations": [
                        "6877:19:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3470,
                      "src": "6877:19:17"
                    },
                    "referencedDeclaration": 3470,
                    "src": "6877:19:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AggregatorStakeInfo_$3470_storage_ptr",
                      "typeString": "struct IEntryPoint.AggregatorStakeInfo"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6737:181:17"
            },
            "src": "6700:219:17"
          },
          {
            "canonicalName": "IEntryPoint.ReturnInfo",
            "id": 3464,
            "members": [
              {
                "constant": false,
                "id": 3453,
                "mutability": "mutable",
                "name": "preOpGas",
                "nameLocation": "7566:8:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7558:16:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3452,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7558:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3455,
                "mutability": "mutable",
                "name": "prefund",
                "nameLocation": "7593:7:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7585:15:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 3454,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "7585:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3457,
                "mutability": "mutable",
                "name": "sigFailed",
                "nameLocation": "7616:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7611:14:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 3456,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "7611:4:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3459,
                "mutability": "mutable",
                "name": "validAfter",
                "nameLocation": "7643:10:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7636:17:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 3458,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "7636:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3461,
                "mutability": "mutable",
                "name": "validUntil",
                "nameLocation": "7671:10:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7664:17:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 3460,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "7664:6:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3463,
                "mutability": "mutable",
                "name": "paymasterContext",
                "nameLocation": "7698:16:17",
                "nodeType": "VariableDeclaration",
                "scope": 3464,
                "src": "7692:22:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 3462,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "7692:5:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ReturnInfo",
            "nameLocation": "7536:10:17",
            "nodeType": "StructDefinition",
            "scope": 3499,
            "src": "7529:193:17",
            "visibility": "public"
          },
          {
            "canonicalName": "IEntryPoint.AggregatorStakeInfo",
            "id": 3470,
            "members": [
              {
                "constant": false,
                "id": 3466,
                "mutability": "mutable",
                "name": "actualAggregator",
                "nameLocation": "7909:16:17",
                "nodeType": "VariableDeclaration",
                "scope": 3470,
                "src": "7901:24:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 3465,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7901:7:17",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 3469,
                "mutability": "mutable",
                "name": "stakeInfo",
                "nameLocation": "7946:9:17",
                "nodeType": "VariableDeclaration",
                "scope": 3470,
                "src": "7936:19:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                  "typeString": "struct IStakeManager.StakeInfo"
                },
                "typeName": {
                  "id": 3468,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 3467,
                    "name": "StakeInfo",
                    "nameLocations": [
                      "7936:9:17"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 3556,
                    "src": "7936:9:17"
                  },
                  "referencedDeclaration": 3556,
                  "src": "7936:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakeInfo_$3556_storage_ptr",
                    "typeString": "struct IStakeManager.StakeInfo"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AggregatorStakeInfo",
            "nameLocation": "7870:19:17",
            "nodeType": "StructDefinition",
            "scope": 3499,
            "src": "7863:100:17",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 3471,
              "nodeType": "StructuredDocumentation",
              "src": "7971:342:17",
              "text": " Get counterfactual sender address.\n  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation.\n this method always revert, and returns the address in SenderAddressResult error\n @param initCode the constructor code to be passed into the UserOperation."
            },
            "functionSelector": "9b249f69",
            "id": 3476,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSenderAddress",
            "nameLocation": "8328:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3473,
                  "mutability": "mutable",
                  "name": "initCode",
                  "nameLocation": "8358:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3476,
                  "src": "8345:21:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3472,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8345:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8344:23:17"
            },
            "returnParameters": {
              "id": 3475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8376:0:17"
            },
            "scope": 3499,
            "src": "8319:58:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3477,
              "nodeType": "StructuredDocumentation",
              "src": "8385:53:17",
              "text": " return value of getSenderAddress"
            },
            "errorSelector": "6ca7b806",
            "id": 3481,
            "name": "SenderAddressResult",
            "nameLocation": "8450:19:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3479,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8478:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3481,
                  "src": "8470:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8470:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8469:16:17"
            },
            "src": "8444:42:17"
          },
          {
            "documentation": {
              "id": 3482,
              "nodeType": "StructuredDocumentation",
              "src": "8494:420:17",
              "text": " simulate full execution of a UserOperation (including both validation and target execution)\n this method will always revert with \"ExecutionResult\".\n it performs full validation of the UserOperation, but ignores signature error.\n Note that in order to collect the the success/failure of the target call, it must be executed\n with trace enabled to track the emitted events."
            },
            "functionSelector": "c2077116",
            "id": 3488,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateHandleOp",
            "nameLocation": "8929:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3485,
                  "mutability": "mutable",
                  "name": "op",
                  "nameLocation": "8969:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3488,
                  "src": "8946:25:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$3661_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 3484,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3483,
                      "name": "UserOperation",
                      "nameLocations": [
                        "8946:13:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3661,
                      "src": "8946:13:17"
                    },
                    "referencedDeclaration": 3661,
                    "src": "8946:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$3661_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8945:27:17"
            },
            "returnParameters": {
              "id": 3487,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8981:0:17"
            },
            "scope": 3499,
            "src": "8920:62:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "errorSelector": "cd8ac246",
            "id": 3498,
            "name": "ExecutionResult",
            "nameLocation": "8996:15:17",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3490,
                  "mutability": "mutable",
                  "name": "preOpGas",
                  "nameLocation": "9030:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9022:16:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9022:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3492,
                  "mutability": "mutable",
                  "name": "paid",
                  "nameLocation": "9057:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9049:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9049:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3494,
                  "mutability": "mutable",
                  "name": "validAfter",
                  "nameLocation": "9079:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9072:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3493,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3496,
                  "mutability": "mutable",
                  "name": "validBefore",
                  "nameLocation": "9107:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3498,
                  "src": "9100:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 3495,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "9100:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9011:114:17"
            },
            "src": "8990:136:17"
          }
        ],
        "scope": 3500,
        "src": "411:8718:17",
        "usedErrors": [
          3367,
          3372,
          3433,
          3451,
          3481,
          3498
        ]
      }
    ],
    "src": "164:8967:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2023-02-18T14:16:06.699Z",
  "devdoc": {
    "errors": {
      "FailedOp(uint256,address,string)": [
        {
          "params": {
            "opIndex": "- index into the array of ops to the failed one (in simulateValidation, this is always zero)",
            "paymaster": "- if paymaster.validatePaymasterUserOp fails, this will be the paymaster's address. if validateUserOp failed,       this value will be zero (since it failed before accessing the paymaster)",
            "reason": "- revert reason   Should be caught in off-chain handleOps simulation and not happen on-chain.   Useful for mitigating DoS attempts against batchers or for troubleshooting of account/paymaster reverts."
          }
        }
      ],
      "ValidationResult((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))": [
        {
          "params": {
            "factoryInfo": "stake information about the factor (if any)",
            "paymasterInfo": "stake information about the paymaster (if any)",
            "returnInfo": "gas and time-range returned values",
            "senderInfo": "stake information about the sender"
          }
        }
      ],
      "ValidationResultWithAggregation((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))": [
        {
          "params": {
            "aggregatorInfo": "signature aggregation info (if the account requires signature aggregator)      bundler MUST use it to verify the signature, or reject the UserOperation",
            "factoryInfo": "stake information about the factor (if any)",
            "paymasterInfo": "stake information about the paymaster (if any)",
            "returnInfo": "gas and time-range returned values",
            "senderInfo": "stake information about the sender"
          }
        }
      ]
    },
    "events": {
      "AccountDeployed(bytes32,address,address,address)": {
        "params": {
          "factory": "the factory used to deploy this account (in the initCode)",
          "paymaster": "the paymaster used by this UserOp",
          "sender": "the account that is deployed",
          "userOpHash": "the userOp that deployed this account. UserOperationEvent will follow."
        }
      },
      "UserOperationRevertReason(bytes32,address,uint256,bytes)": {
        "params": {
          "nonce": "the nonce used in the request",
          "revertReason": "- the return bytes from the (reverted) call to \"callData\".",
          "sender": "the sender of this request",
          "userOpHash": "the request unique identifier."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "addStake(uint32)": {
        "params": {
          "_unstakeDelaySec": "the new lock duration before the deposit can be withdrawn."
        }
      },
      "getSenderAddress(bytes)": {
        "params": {
          "initCode": "the constructor code to be passed into the UserOperation."
        }
      },
      "handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
        "params": {
          "beneficiary": "the address to receive the fees",
          "opsPerAggregator": "the operations to execute, grouped by aggregator (or address(0) for no-aggregator accounts)"
        }
      },
      "handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
        "params": {
          "beneficiary": "the address to receive the fees",
          "ops": "the operations to execute"
        }
      },
      "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "details": "this method always revert. Successful result is ValidationResult error. other errors are failures.The node must also verify it doesn't use banned opcodes, and that it doesn't reference storage outside the account's data.",
        "params": {
          "userOp": "the user operation to validate."
        }
      },
      "withdrawStake(address)": {
        "params": {
          "withdrawAddress": "the address to send withdrawn value."
        }
      },
      "withdrawTo(address,uint256)": {
        "params": {
          "withdrawAddress": "the address to send withdrawn value.",
          "withdrawAmount": "the amount to withdraw."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "errors": {
      "FailedOp(uint256,address,string)": [
        {
          "notice": "a custom revert error of handleOps, to identify the offending op.  NOTE: if simulateValidation passes successfully, there should be no reason for handleOps to fail on it."
        }
      ],
      "SenderAddressResult(address)": [
        {
          "notice": "return value of getSenderAddress"
        }
      ],
      "SignatureValidationFailed(address)": [
        {
          "notice": "error case when a signature aggregator fails to verify the aggregated signature it had created."
        }
      ],
      "ValidationResult((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256))": [
        {
          "notice": "Successful result from simulateValidation."
        }
      ],
      "ValidationResultWithAggregation((uint256,uint256,bool,uint64,uint64,bytes),(uint256,uint256),(uint256,uint256),(uint256,uint256),(address,(uint256,uint256)))": [
        {
          "notice": "Successful result from simulateValidation, if the account returns a signature aggregator"
        }
      ]
    },
    "events": {
      "AccountDeployed(bytes32,address,address,address)": {
        "notice": "account \"sender\" was deployed."
      },
      "SignatureAggregatorChanged(address)": {
        "notice": "signature aggregator used by the following UserOperationEvents within this bundle."
      },
      "StakeLocked(address,uint256,uint256)": {
        "notice": "Emitted once a stake is scheduled for withdrawal"
      },
      "StakeUnlocked(address,uint256)": {
        "notice": "Emitted once a stake is scheduled for withdrawal"
      },
      "UserOperationRevertReason(bytes32,address,uint256,bytes)": {
        "notice": "An event emitted if the UserOperation \"callData\" reverted with non-zero length"
      }
    },
    "kind": "user",
    "methods": {
      "addStake(uint32)": {
        "notice": "add to the account's stake - amount and delay any pending unstake is first cancelled."
      },
      "balanceOf(address)": {
        "notice": "return the deposit (for gas payment) of the account"
      },
      "depositTo(address)": {
        "notice": "add to the deposit of the given account"
      },
      "getSenderAddress(bytes)": {
        "notice": "Get counterfactual sender address.  Calculate the sender contract address that will be generated by the initCode and salt in the UserOperation. this method always revert, and returns the address in SenderAddressResult error"
      },
      "getUserOpHash((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "generate a request Id - unique identifier for this request. the request ID is a hash over the content of the userOp (except the signature), the entrypoint and the chainid."
      },
      "handleAggregatedOps(((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address,bytes)[],address)": {
        "notice": "Execute a batch of UserOperation with Aggregators"
      },
      "handleOps((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes)[],address)": {
        "notice": "Execute a batch of UserOperation. no signature aggregator is used. if any account requires an aggregator (that is, it returned an \"actualAggregator\" when performing simulateValidation), then handleAggregatedOps() must be used instead."
      },
      "simulateHandleOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "simulate full execution of a UserOperation (including both validation and target execution) this method will always revert with \"ExecutionResult\". it performs full validation of the UserOperation, but ignores signature error. Note that in order to collect the the success/failure of the target call, it must be executed with trace enabled to track the emitted events."
      },
      "simulateValidation((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))": {
        "notice": "Simulate a call to account.validateUserOp and paymaster.validatePaymasterUserOp."
      },
      "unlockStake()": {
        "notice": "attempt to unlock the stake. the value can be withdrawn (using withdrawStake) after the unstake delay."
      },
      "withdrawStake(address)": {
        "notice": "withdraw from the (unlocked) stake. must first call unlockStake and wait for the unstakeDelay to pass"
      },
      "withdrawTo(address,uint256)": {
        "notice": "withdraw from the deposit."
      }
    },
    "version": 1
  }
}